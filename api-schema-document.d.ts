/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   api-schema-document.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {LitElement, html, css} from 'lit-element';

import {AmfHelperMixin} from '@api-components/amf-helper-mixin/amf-helper-mixin.js';

declare namespace ApiElements {

  /**
   * `api-schema-document`
   *
   * A component to render XML schema with examples.
   *
   * Note, if AMF contains unresolved properties (reference-id without resolving
   * the value) this element will resolve it. `amf` must be set on this
   * element to resolve the references.
   *
   * ## Styling
   *
   * `<api-schema-document>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--api-schema-document` | Mixin applied to this elment | `{}`
   * `api-schema-render` | Mixin applied to schema renderer element | `{}`
   */
  class ApiSchemaDocument extends
    AmfHelperMixin(
    Object) {

    /**
     * AMF's shape object object.
     * Values for sheba and examples are computed from this model.
     */
    shape: object|null|undefined;

    /**
     * `raml-aware` scope property to use.
     */
    aware: string|null|undefined;

    /**
     * Computed `http://www.w3.org/ns/shacl#raw`
     */
    _raw: string|null|undefined;

    /**
     * Computed list of examples
     */
    _examples: any[]|null|undefined;

    /**
     * Computed value, true when data contains example only
     */
    _exampleOnly: boolean|null|undefined;

    /**
     * Computed value, true when data contains xml schema only
     */
    _schemaOnly: boolean|null|undefined;

    /**
     * Computed value, true when data contains example and schema information
     */
    _schemaAndExample: boolean|null|undefined;

    /**
     * Currently selected tab.
     * Relevant when the example contains both example and schema.
     */
    selectedPage: number|null|undefined;
    legacy: boolean|null|undefined;

    /**
     * Enables compatibility with Anypoint components.
     */
    compatibility: boolean|null|undefined;
    render(): any;
    _exampleOnlyTemplate(): any;
    _schemaAndExampleTemplate(): any;
    _renderSelectedPage(): any;
    _schemaOnlyTemplate(): any;
    _apiChanged(e: any): void;
    _selectedPageChanged(e: any): void;

    /**
     * Comnputes besic properties for the view.
     *
     * @param schema `shape` value
     */
    _schemaChanged(schema: object|null): void;
    _processExamples(examples: any): any;
    _computeExampleValue(item: any): any;
  }
}

declare global {

  interface HTMLElementTagNameMap {
    "api-schema-document": ApiElements.ApiSchemaDocument;
  }
}

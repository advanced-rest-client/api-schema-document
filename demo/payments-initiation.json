[
{
"@id": "amf://id",
"@type": [
"http://a.ml/vocabularies/document#Document",
"http://a.ml/vocabularies/document#Fragment",
"http://a.ml/vocabularies/document#Module",
"http://a.ml/vocabularies/document#Unit"
],
"http://a.ml/vocabularies/document#encodes": [
{
"@id": "amf://id#113",
"@type": [
"http://a.ml/vocabularies/apiContract#WebAPI",
"http://a.ml/vocabularies/document#RootDomainElement",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "Payments Initiation API"
}
],
"http://a.ml/vocabularies/apiContract#server": [
{
"@id": "amf://id#163",
"@type": [
"http://a.ml/vocabularies/apiContract#Server",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#urlTemplate": [
{
"@value": "https://anypoint-if-dev.hk.hsbc/payments-glcm/initiation/{version}"
}
],
"http://a.ml/vocabularies/apiContract#variable": [
{
"@id": "amf://id#164",
"@type": [
"http://a.ml/vocabularies/apiContract#Parameter",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "version"
}
],
"http://a.ml/vocabularies/apiContract#required": [
{
"@value": true
}
],
"http://a.ml/vocabularies/apiContract#binding": [
{
"@value": "path"
}
],
"http://a.ml/vocabularies/shapes#schema": [
{
"@id": "amf://id#165",
"@type": [
"http://a.ml/vocabularies/shapes#ScalarShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://www.w3.org/ns/shacl#name": [
{
"@value": "version"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#164/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#synthesized-field": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#164"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "true"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#163/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#urlTemplate"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(3,0)-(4,0)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#synthesized-field": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#163"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "true"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/core#version": [
{
"@value": "1.0.0"
}
],
"http://a.ml/vocabularies/apiContract#endpoint": [
{
"@id": "amf://id#114",
"@type": [
"http://a.ml/vocabularies/apiContract#EndPoint",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/apiContract#path": [
{
"@value": "/payments"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "payments-initiation"
}
],
"http://a.ml/vocabularies/core#description": [
{
"@value": "This API is used to initiate payment in pain00100103 format."
}
],
"http://a.ml/vocabularies/apiContract#supportedOperation": [
{
"@id": "amf://id#115",
"@type": [
"http://a.ml/vocabularies/apiContract#Operation",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/apiContract#method": [
{
"@value": "post"
}
],
"http://a.ml/vocabularies/core#description": [
{
"@value": "This API is used to initiate payment in pain00100103 format."
}
],
"http://a.ml/vocabularies/apiContract#expects": [
{
"@id": "amf://id#116",
"@type": [
"http://a.ml/vocabularies/apiContract#Request",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/apiContract#header": [
{
"@id": "amf://id#117",
"@type": [
"http://a.ml/vocabularies/apiContract#Parameter",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "X-HSBC-Source-System-Id"
}
],
"http://a.ml/vocabularies/apiContract#paramName": [
{
"@value": "X-HSBC-Source-System-Id"
}
],
"http://a.ml/vocabularies/apiContract#required": [
{
"@value": true
}
],
"http://a.ml/vocabularies/apiContract#binding": [
{
"@value": "header"
}
],
"http://a.ml/vocabularies/shapes#schema": [
{
"@id": "amf://id#118",
"@type": [
"http://a.ml/vocabularies/shapes#ScalarShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://www.w3.org/ns/shacl#minLength": [
{
"@value": 1
}
],
"http://www.w3.org/ns/shacl#name": [
{
"@value": "X-HSBC-Source-System-Id"
}
],
"http://a.ml/vocabularies/core#description": [
{
"@value": "Uniquely identifies the Source system instance as registered in the EIM Application"
}
],
"http://a.ml/vocabularies/apiContract#examples": [
{
"@id": "amf://id#119",
"@type": [
"http://a.ml/vocabularies/apiContract#Example",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#strict": [
{
"@value": true
}
],
"http://a.ml/vocabularies/document#structuredValue": [
{
"@id": "amf://id#119",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "8428866"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_1"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#119/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#119"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(4,13)-(4,22)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "8428866"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#119/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#synthesized-field": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#strict"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "true"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#raw"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(4,13)-(4,22)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#119"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(4,13)-(4,22)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#structuredValue"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(4,13)-(4,22)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#tracked-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#119"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "amf://id#120"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#118/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#type-property-lexical-info": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#118"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(5,4)-(5,8)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(3,4)-(3,100)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://www.w3.org/ns/shacl#datatype"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(5,10)-(5,16)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#118"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(5,10)-(5,16)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://www.w3.org/ns/shacl#minLength"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(6,4)-(6,16)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#117/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#required"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(7,4)-(7,18)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#117"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(2,2)-(7,18)]"
}
]
}
]
}
]
},
{
"@id": "amf://id#121",
"@type": [
"http://a.ml/vocabularies/apiContract#Parameter",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "X-HSBC-SoR-CountryCode"
}
],
"http://a.ml/vocabularies/apiContract#paramName": [
{
"@value": "X-HSBC-SoR-CountryCode"
}
],
"http://a.ml/vocabularies/apiContract#required": [
{
"@value": false
}
],
"http://a.ml/vocabularies/apiContract#binding": [
{
"@value": "header"
}
],
"http://a.ml/vocabularies/shapes#schema": [
{
"@id": "amf://id#122",
"@type": [
"http://a.ml/vocabularies/shapes#ScalarShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://www.w3.org/ns/shacl#pattern": [
{
"@value": "^[A-Z]{2}$"
}
],
"http://www.w3.org/ns/shacl#name": [
{
"@value": "X-HSBC-SoR-CountryCode"
}
],
"http://a.ml/vocabularies/core#description": [
{
"@value": "The country of the System of Record (SoR) that the data being accessed resides in as defined by ISO 3166-1 alpha-2 codes. This is mandatory for USRTP Initiation"
}
],
"http://a.ml/vocabularies/apiContract#examples": [
{
"@id": "amf://id#123",
"@type": [
"http://a.ml/vocabularies/apiContract#Example",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#strict": [
{
"@value": true
}
],
"http://a.ml/vocabularies/document#structuredValue": [
{
"@id": "amf://id#123",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "GB"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_1"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#123/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#123"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(10,13)-(10,17)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "GB"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#123/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#synthesized-field": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#strict"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "true"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#raw"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(10,13)-(10,17)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#123"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(10,13)-(10,17)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#structuredValue"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(10,13)-(10,17)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#tracked-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#123"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "amf://id#124"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#122/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#type-property-lexical-info": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#122"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(11,4)-(11,8)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(9,4)-(9,177)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://www.w3.org/ns/shacl#datatype"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(11,10)-(11,16)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#122"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(11,10)-(11,16)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://www.w3.org/ns/shacl#pattern"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(12,4)-(12,23)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#121/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#required"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(13,4)-(13,19)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#121"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(8,2)-(13,19)]"
}
]
}
]
}
]
},
{
"@id": "amf://id#125",
"@type": [
"http://a.ml/vocabularies/apiContract#Parameter",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "X-HSBC-Session-Correlation-Id"
}
],
"http://a.ml/vocabularies/apiContract#paramName": [
{
"@value": "X-HSBC-Session-Correlation-Id"
}
],
"http://a.ml/vocabularies/apiContract#required": [
{
"@value": true
}
],
"http://a.ml/vocabularies/apiContract#binding": [
{
"@value": "header"
}
],
"http://a.ml/vocabularies/shapes#schema": [
{
"@id": "amf://id#126",
"@type": [
"http://a.ml/vocabularies/shapes#ScalarShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://www.w3.org/ns/shacl#minLength": [
{
"@value": 1
}
],
"http://www.w3.org/ns/shacl#name": [
{
"@value": "X-HSBC-Session-Correlation-Id"
}
],
"http://a.ml/vocabularies/core#description": [
{
"@value": "An identifier that is connected to an authenticated session but cannot be used in itself to represent an authenticated session"
}
],
"http://a.ml/vocabularies/apiContract#examples": [
{
"@id": "amf://id#127",
"@type": [
"http://a.ml/vocabularies/apiContract#Example",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#strict": [
{
"@value": true
}
],
"http://a.ml/vocabularies/document#structuredValue": [
{
"@id": "amf://id#127",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "4038af76-2531-4a00-971c-faf1be6f5f92"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_1"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#127/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#127"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(16,13)-(16,51)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "4038af76-2531-4a00-971c-faf1be6f5f92"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#127/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#synthesized-field": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#strict"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "true"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#raw"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(16,13)-(16,51)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#127"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(16,13)-(16,51)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#structuredValue"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(16,13)-(16,51)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#tracked-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#127"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "amf://id#128"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#126/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#type-property-lexical-info": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#126"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(17,4)-(17,8)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(15,4)-(15,143)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://www.w3.org/ns/shacl#datatype"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(17,10)-(17,16)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#126"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(17,10)-(17,16)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://www.w3.org/ns/shacl#minLength"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(18,4)-(18,16)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#125/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#required"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(19,4)-(19,18)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#125"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(14,2)-(19,18)]"
}
]
}
]
}
]
},
{
"@id": "amf://id#129",
"@type": [
"http://a.ml/vocabularies/apiContract#Parameter",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "X-HSBC-Request-Correlation-Id"
}
],
"http://a.ml/vocabularies/apiContract#paramName": [
{
"@value": "X-HSBC-Request-Correlation-Id"
}
],
"http://a.ml/vocabularies/apiContract#required": [
{
"@value": true
}
],
"http://a.ml/vocabularies/apiContract#binding": [
{
"@value": "header"
}
],
"http://a.ml/vocabularies/shapes#schema": [
{
"@id": "amf://id#130",
"@type": [
"http://a.ml/vocabularies/shapes#ScalarShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://www.w3.org/ns/shacl#minLength": [
{
"@value": 1
}
],
"http://www.w3.org/ns/shacl#name": [
{
"@value": "X-HSBC-Request-Correlation-Id"
}
],
"http://a.ml/vocabularies/core#description": [
{
"@value": "Request Correlation ID to correlate all messages from user for a given request"
}
],
"http://a.ml/vocabularies/apiContract#examples": [
{
"@id": "amf://id#131",
"@type": [
"http://a.ml/vocabularies/apiContract#Example",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#strict": [
{
"@value": true
}
],
"http://a.ml/vocabularies/document#structuredValue": [
{
"@id": "amf://id#131",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "2d933d80-be43-11e7-92e1-005056a61740"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_1"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#131/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#131"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(22,13)-(22,51)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "2d933d80-be43-11e7-92e1-005056a61740"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#131/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#synthesized-field": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#strict"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "true"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#raw"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(22,13)-(22,51)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#131"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(22,13)-(22,51)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#structuredValue"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(22,13)-(22,51)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#tracked-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#131"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "amf://id#132"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#130/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#type-property-lexical-info": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#130"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(23,4)-(23,8)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(21,4)-(21,95)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://www.w3.org/ns/shacl#datatype"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(23,10)-(23,16)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#130"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(23,10)-(23,16)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://www.w3.org/ns/shacl#minLength"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(24,4)-(24,16)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#129/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#required"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(25,4)-(25,18)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#129"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(20,2)-(25,18)]"
}
]
}
]
}
]
},
{
"@id": "amf://id#133",
"@type": [
"http://a.ml/vocabularies/apiContract#Parameter",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "X-HSBC-Routing-Indicator-Id"
}
],
"http://a.ml/vocabularies/apiContract#paramName": [
{
"@value": "X-HSBC-Routing-Indicator-Id"
}
],
"http://a.ml/vocabularies/apiContract#required": [
{
"@value": true
}
],
"http://a.ml/vocabularies/apiContract#binding": [
{
"@value": "header"
}
],
"http://a.ml/vocabularies/shapes#schema": [
{
"@id": "amf://id#134",
"@type": [
"http://a.ml/vocabularies/shapes#ScalarShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://www.w3.org/ns/shacl#minLength": [
{
"@value": 1
}
],
"http://www.w3.org/ns/shacl#maxLength": [
{
"@value": 255
}
],
"http://www.w3.org/ns/shacl#name": [
{
"@value": "X-HSBC-Routing-Indicator-Id"
}
],
"http://a.ml/vocabularies/core#description": [
{
"@value": "Payments Route Indicator (this will be deprecated soon)"
}
],
"http://a.ml/vocabularies/apiContract#examples": [
{
"@id": "amf://id#135",
"@type": [
"http://a.ml/vocabularies/apiContract#Example",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#strict": [
{
"@value": true
}
],
"http://a.ml/vocabularies/document#structuredValue": [
{
"@id": "amf://id#135",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "USRTP"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_1"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#135/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#135"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(28,13)-(28,20)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "USRTP"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#135/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#synthesized-field": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#strict"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "true"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#raw"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(28,13)-(28,20)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#135"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(28,13)-(28,20)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#structuredValue"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(28,13)-(28,20)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#tracked-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#135"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "amf://id#136"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#134/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#type-property-lexical-info": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#134"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(29,4)-(29,8)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(27,4)-(27,72)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://www.w3.org/ns/shacl#minLength"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(30,4)-(30,16)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#134"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(29,10)-(29,16)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://www.w3.org/ns/shacl#datatype"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(29,10)-(29,16)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://www.w3.org/ns/shacl#maxLength"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(31,4)-(31,18)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#133/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#required"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(32,4)-(32,18)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#133"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(26,2)-(32,18)]"
}
]
}
]
}
]
},
{
"@id": "amf://id#137",
"@type": [
"http://a.ml/vocabularies/apiContract#Parameter",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "X-HSBC-Chnl-Group-Member"
}
],
"http://a.ml/vocabularies/apiContract#paramName": [
{
"@value": "X-HSBC-Chnl-Group-Member"
}
],
"http://a.ml/vocabularies/apiContract#required": [
{
"@value": false
}
],
"http://a.ml/vocabularies/apiContract#binding": [
{
"@value": "header"
}
],
"http://a.ml/vocabularies/shapes#schema": [
{
"@id": "amf://id#138",
"@type": [
"http://a.ml/vocabularies/shapes#ScalarShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://www.w3.org/ns/shacl#name": [
{
"@value": "X-HSBC-Chnl-Group-Member"
}
],
"http://a.ml/vocabularies/core#description": [
{
"@value": "HSBC Group member"
}
],
"http://a.ml/vocabularies/apiContract#examples": [
{
"@id": "amf://id#139",
"@type": [
"http://a.ml/vocabularies/apiContract#Example",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#strict": [
{
"@value": true
}
],
"http://a.ml/vocabularies/document#structuredValue": [
{
"@id": "amf://id#139",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "HBAP"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_1"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#139/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#139"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(36,13)-(36,19)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "HBAP"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#139/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#synthesized-field": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#strict"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "true"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#raw"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(36,13)-(36,19)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#139"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(36,13)-(36,19)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#structuredValue"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(36,13)-(36,19)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#tracked-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#139"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "amf://id#140"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#138/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#type-property-lexical-info": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#138"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(35,4)-(35,8)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(34,4)-(34,34)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#138"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(35,10)-(35,16)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://www.w3.org/ns/shacl#datatype"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(35,10)-(35,16)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#137/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#required"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(37,4)-(37,19)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#137"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(33,2)-(37,19)]"
}
]
}
]
}
]
},
{
"@id": "amf://id#141",
"@type": [
"http://a.ml/vocabularies/apiContract#Parameter",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "User-Agent"
}
],
"http://a.ml/vocabularies/apiContract#paramName": [
{
"@value": "User-Agent"
}
],
"http://a.ml/vocabularies/apiContract#required": [
{
"@value": false
}
],
"http://a.ml/vocabularies/apiContract#binding": [
{
"@value": "header"
}
],
"http://a.ml/vocabularies/shapes#schema": [
{
"@id": "amf://id#142",
"@type": [
"http://a.ml/vocabularies/shapes#ScalarShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://www.w3.org/ns/shacl#name": [
{
"@value": "User-Agent"
}
],
"http://a.ml/vocabularies/core#description": [
{
"@value": "User Agent form user's machine/browser"
}
],
"http://a.ml/vocabularies/apiContract#examples": [
{
"@id": "amf://id#143",
"@type": [
"http://a.ml/vocabularies/apiContract#Example",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#strict": [
{
"@value": true
}
],
"http://a.ml/vocabularies/document#structuredValue": [
{
"@id": "amf://id#143",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_1"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#143/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#143"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(40,13)-(40,126)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#143/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#synthesized-field": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#strict"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "true"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#raw"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(40,13)-(40,126)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#143"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(40,13)-(40,126)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#structuredValue"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(40,13)-(40,126)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#tracked-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#143"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "amf://id#144"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#142/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(39,4)-(39,55)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#142"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(39,4)-(41,19)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#141/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#required"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(41,4)-(41,19)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#141"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(38,2)-(41,19)]"
}
]
}
]
}
]
},
{
"@id": "amf://id#145",
"@type": [
"http://a.ml/vocabularies/apiContract#Parameter",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "X-HSBC-GBGF"
}
],
"http://a.ml/vocabularies/apiContract#paramName": [
{
"@value": "X-HSBC-GBGF"
}
],
"http://a.ml/vocabularies/apiContract#required": [
{
"@value": false
}
],
"http://a.ml/vocabularies/apiContract#binding": [
{
"@value": "header"
}
],
"http://a.ml/vocabularies/shapes#schema": [
{
"@id": "amf://id#146",
"@type": [
"http://a.ml/vocabularies/shapes#ScalarShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://www.w3.org/ns/shacl#pattern": [
{
"@value": "^[A-Z]{1,4}$"
}
],
"http://www.w3.org/ns/shacl#name": [
{
"@value": "X-HSBC-GBGF"
}
],
"http://a.ml/vocabularies/core#description": [
{
"@value": "The Global Business or Global Function (GBGF) as defined by the Business."
}
],
"http://a.ml/vocabularies/apiContract#examples": [
{
"@id": "amf://id#147",
"@type": [
"http://a.ml/vocabularies/apiContract#Example",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#strict": [
{
"@value": true
}
],
"http://a.ml/vocabularies/document#structuredValue": [
{
"@id": "amf://id#147",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "RBWM"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_1"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#147/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#147"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(45,13)-(45,19)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "RBWM"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#147/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#synthesized-field": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#strict"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "true"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#raw"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(45,13)-(45,19)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#147"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(45,13)-(45,19)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#structuredValue"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(45,13)-(45,19)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#tracked-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#147"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "amf://id#148"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#146/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#type-property-lexical-info": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#146"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(44,4)-(44,8)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(43,4)-(43,90)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://www.w3.org/ns/shacl#datatype"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(44,10)-(44,16)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#146"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(44,10)-(44,16)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://www.w3.org/ns/shacl#pattern"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(46,4)-(46,25)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#145/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#required"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(47,4)-(47,19)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#145"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(42,2)-(47,19)]"
}
]
}
]
}
]
},
{
"@id": "amf://id#149",
"@type": [
"http://a.ml/vocabularies/apiContract#Parameter",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "X-HSBC-E2E-Trust-Token"
}
],
"http://a.ml/vocabularies/apiContract#paramName": [
{
"@value": "X-HSBC-E2E-Trust-Token"
}
],
"http://a.ml/vocabularies/apiContract#required": [
{
"@value": false
}
],
"http://a.ml/vocabularies/apiContract#binding": [
{
"@value": "header"
}
],
"http://a.ml/vocabularies/shapes#schema": [
{
"@id": "amf://id#150",
"@type": [
"http://a.ml/vocabularies/shapes#ScalarShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://www.w3.org/ns/shacl#name": [
{
"@value": "X-HSBC-E2E-Trust-Token"
}
],
"http://a.ml/vocabularies/core#description": [
{
"@value": "Contains Identity information about the authentication caller (or subject)"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#150/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(3,4)-(3,91)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#150"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(3,4)-(4,19)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#149/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#required"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(4,4)-(4,19)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#149"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(2,2)-(4,19)]"
}
]
}
]
}
]
},
{
"@id": "amf://id#151",
"@type": [
"http://a.ml/vocabularies/apiContract#Parameter",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "X-HSBC-Session-Id"
}
],
"http://a.ml/vocabularies/apiContract#paramName": [
{
"@value": "X-HSBC-Session-Id"
}
],
"http://a.ml/vocabularies/apiContract#required": [
{
"@value": false
}
],
"http://a.ml/vocabularies/apiContract#binding": [
{
"@value": "header"
}
],
"http://a.ml/vocabularies/shapes#schema": [
{
"@id": "amf://id#152",
"@type": [
"http://a.ml/vocabularies/shapes#ScalarShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://www.w3.org/ns/shacl#name": [
{
"@value": "X-HSBC-Session-Id"
}
],
"http://a.ml/vocabularies/core#description": [
{
"@value": "Contains the identifier which represents a subject's authenticated session with an Identity Provider"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#152/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(6,4)-(6,117)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#152"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(6,4)-(7,19)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#151/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#required"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(7,4)-(7,19)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#151"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(5,2)-(7,19)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/apiContract#payload": [
{
"@id": "amf://id#33",
"@type": [
"http://a.ml/vocabularies/apiContract#Payload",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#mediaType": [
{
"@value": "application/xml"
}
],
"http://a.ml/vocabularies/shapes#schema": [
{
"@id": "amf://id#31/linked_1",
"@type": [
"http://a.ml/vocabularies/shapes#SchemaShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#link-target": [
{
"@id": "amf://id#31"
}
],
"http://a.ml/vocabularies/document#link-label": [
{
"@value": "pain00100103-schema"
}
],
"http://a.ml/vocabularies/document#link-target": [
{
"@id": "amf://id#31"
}
],
"http://a.ml/vocabularies/document#link-label": [
{
"@value": "pain00100103-schema"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#33/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#33"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(23,6)-(27,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#116/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#payload"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(22,3)-(27,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#116"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(19,0)-(97,7)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/apiContract#returns": [
{
"@id": "amf://id#153",
"@type": [
"http://a.ml/vocabularies/apiContract#Response",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "200"
}
],
"http://a.ml/vocabularies/apiContract#statusCode": [
{
"@value": "200"
}
],
"http://a.ml/vocabularies/apiContract#payload": [
{
"@id": "amf://id#36",
"@type": [
"http://a.ml/vocabularies/apiContract#Payload",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#mediaType": [
{
"@value": "application/xml"
}
],
"http://a.ml/vocabularies/shapes#schema": [
{
"@id": "amf://id#34/linked_1",
"@type": [
"http://a.ml/vocabularies/shapes#SchemaShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#link-target": [
{
"@id": "amf://id#34"
}
],
"http://a.ml/vocabularies/document#link-label": [
{
"@value": "response-schema"
}
],
"http://a.ml/vocabularies/document#link-target": [
{
"@id": "amf://id#34"
}
],
"http://a.ml/vocabularies/document#link-label": [
{
"@value": "response-schema"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#36/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#36"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(30,11)-(34,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#153/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#payload"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(29,9)-(34,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#153"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(28,7)-(34,0)]"
}
]
}
]
}
]
},
{
"@id": "amf://id#154",
"@type": [
"http://a.ml/vocabularies/apiContract#Response",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "202"
}
],
"http://a.ml/vocabularies/core#description": [
{
"@value": "Accepted / Received by Bank"
}
],
"http://a.ml/vocabularies/apiContract#statusCode": [
{
"@value": "202"
}
],
"http://a.ml/vocabularies/apiContract#payload": [
{
"@id": "amf://id#38",
"@type": [
"http://a.ml/vocabularies/apiContract#Payload",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#mediaType": [
{
"@value": "application/xml"
}
],
"http://a.ml/vocabularies/shapes#schema": [
{
"@id": "amf://id#34/linked_2",
"@type": [
"http://a.ml/vocabularies/shapes#SchemaShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#link-target": [
{
"@id": "amf://id#34"
}
],
"http://a.ml/vocabularies/document#link-label": [
{
"@value": "response-schema"
}
],
"http://a.ml/vocabularies/document#link-target": [
{
"@id": "amf://id#34"
}
],
"http://a.ml/vocabularies/document#link-label": [
{
"@value": "response-schema"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#38/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#38"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(37,11)-(41,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#154/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#payload"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(36,9)-(41,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#154"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(34,7)-(41,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(35,9)-(36,0)]"
}
]
}
]
}
]
},
{
"@id": "amf://id#155",
"@type": [
"http://a.ml/vocabularies/apiContract#Response",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "400"
}
],
"http://a.ml/vocabularies/core#description": [
{
"@value": "Bad request - Client error indicating that the request was not properly formatted."
}
],
"http://a.ml/vocabularies/apiContract#statusCode": [
{
"@value": "400"
}
],
"http://a.ml/vocabularies/apiContract#payload": [
{
"@id": "amf://id#40",
"@type": [
"http://a.ml/vocabularies/apiContract#Payload",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#mediaType": [
{
"@value": "application/xml"
}
],
"http://a.ml/vocabularies/shapes#schema": [
{
"@id": "amf://id#34/linked_3",
"@type": [
"http://a.ml/vocabularies/shapes#SchemaShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#link-target": [
{
"@id": "amf://id#34"
}
],
"http://a.ml/vocabularies/document#link-label": [
{
"@value": "response-schema"
}
],
"http://a.ml/vocabularies/document#link-target": [
{
"@id": "amf://id#34"
}
],
"http://a.ml/vocabularies/document#link-label": [
{
"@value": "response-schema"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#40/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#40"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(44,10)-(48,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#155/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#payload"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(43,8)-(48,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#155"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(41,7)-(48,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(42,8)-(43,0)]"
}
]
}
]
}
]
},
{
"@id": "amf://id#156",
"@type": [
"http://a.ml/vocabularies/apiContract#Response",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "401"
}
],
"http://a.ml/vocabularies/core#description": [
{
"@value": "Unable to invoke a https webservice with a valid certificate."
}
],
"http://a.ml/vocabularies/apiContract#statusCode": [
{
"@value": "401"
}
],
"http://a.ml/vocabularies/apiContract#payload": [
{
"@id": "amf://id#42",
"@type": [
"http://a.ml/vocabularies/apiContract#Payload",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#mediaType": [
{
"@value": "application/xml"
}
],
"http://a.ml/vocabularies/shapes#schema": [
{
"@id": "amf://id#34/linked_4",
"@type": [
"http://a.ml/vocabularies/shapes#SchemaShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#link-target": [
{
"@id": "amf://id#34"
}
],
"http://a.ml/vocabularies/document#link-label": [
{
"@value": "response-schema"
}
],
"http://a.ml/vocabularies/document#link-target": [
{
"@id": "amf://id#34"
}
],
"http://a.ml/vocabularies/document#link-label": [
{
"@value": "response-schema"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#42/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#42"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(51,10)-(55,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#156/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#payload"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(50,8)-(55,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#156"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(48,7)-(55,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(49,8)-(50,0)]"
}
]
}
]
}
]
},
{
"@id": "amf://id#157",
"@type": [
"http://a.ml/vocabularies/apiContract#Response",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "403"
}
],
"http://a.ml/vocabularies/core#description": [
{
"@value": "Forbidden"
}
],
"http://a.ml/vocabularies/apiContract#statusCode": [
{
"@value": "403"
}
],
"http://a.ml/vocabularies/apiContract#payload": [
{
"@id": "amf://id#44",
"@type": [
"http://a.ml/vocabularies/apiContract#Payload",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#mediaType": [
{
"@value": "application/xml"
}
],
"http://a.ml/vocabularies/shapes#schema": [
{
"@id": "amf://id#34/linked_5",
"@type": [
"http://a.ml/vocabularies/shapes#SchemaShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#link-target": [
{
"@id": "amf://id#34"
}
],
"http://a.ml/vocabularies/document#link-label": [
{
"@value": "response-schema"
}
],
"http://a.ml/vocabularies/document#link-target": [
{
"@id": "amf://id#34"
}
],
"http://a.ml/vocabularies/document#link-label": [
{
"@value": "response-schema"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#44/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#44"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(58,10)-(62,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#157/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#payload"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(57,8)-(62,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#157"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(55,7)-(62,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(56,8)-(57,0)]"
}
]
}
]
}
]
},
{
"@id": "amf://id#158",
"@type": [
"http://a.ml/vocabularies/apiContract#Response",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "405"
}
],
"http://a.ml/vocabularies/core#description": [
{
"@value": "Method Not Allowed"
}
],
"http://a.ml/vocabularies/apiContract#statusCode": [
{
"@value": "405"
}
],
"http://a.ml/vocabularies/apiContract#payload": [
{
"@id": "amf://id#46",
"@type": [
"http://a.ml/vocabularies/apiContract#Payload",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#mediaType": [
{
"@value": "application/xml"
}
],
"http://a.ml/vocabularies/shapes#schema": [
{
"@id": "amf://id#34/linked_6",
"@type": [
"http://a.ml/vocabularies/shapes#SchemaShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#link-target": [
{
"@id": "amf://id#34"
}
],
"http://a.ml/vocabularies/document#link-label": [
{
"@value": "response-schema"
}
],
"http://a.ml/vocabularies/document#link-target": [
{
"@id": "amf://id#34"
}
],
"http://a.ml/vocabularies/document#link-label": [
{
"@value": "response-schema"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#46/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#46"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(65,10)-(70,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#158/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#payload"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(64,8)-(70,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#158"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(62,7)-(70,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(63,8)-(64,0)]"
}
]
}
]
}
]
},
{
"@id": "amf://id#159",
"@type": [
"http://a.ml/vocabularies/apiContract#Response",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "406"
}
],
"http://a.ml/vocabularies/core#description": [
{
"@value": "not Acceptable - Failed to determine Payment Engine Route"
}
],
"http://a.ml/vocabularies/apiContract#statusCode": [
{
"@value": "406"
}
],
"http://a.ml/vocabularies/apiContract#payload": [
{
"@id": "amf://id#48",
"@type": [
"http://a.ml/vocabularies/apiContract#Payload",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#mediaType": [
{
"@value": "application/xml"
}
],
"http://a.ml/vocabularies/shapes#schema": [
{
"@id": "amf://id#34/linked_7",
"@type": [
"http://a.ml/vocabularies/shapes#SchemaShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#link-target": [
{
"@id": "amf://id#34"
}
],
"http://a.ml/vocabularies/document#link-label": [
{
"@value": "response-schema"
}
],
"http://a.ml/vocabularies/document#link-target": [
{
"@id": "amf://id#34"
}
],
"http://a.ml/vocabularies/document#link-label": [
{
"@value": "response-schema"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#48/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#48"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(73,10)-(77,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#159/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#payload"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(72,8)-(77,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#159"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(70,7)-(77,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(71,8)-(72,0)]"
}
]
}
]
}
]
},
{
"@id": "amf://id#160",
"@type": [
"http://a.ml/vocabularies/apiContract#Response",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "415"
}
],
"http://a.ml/vocabularies/core#description": [
{
"@value": "Unsupported Media Type"
}
],
"http://a.ml/vocabularies/apiContract#statusCode": [
{
"@value": "415"
}
],
"http://a.ml/vocabularies/apiContract#payload": [
{
"@id": "amf://id#50",
"@type": [
"http://a.ml/vocabularies/apiContract#Payload",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#mediaType": [
{
"@value": "application/xml"
}
],
"http://a.ml/vocabularies/shapes#schema": [
{
"@id": "amf://id#34/linked_8",
"@type": [
"http://a.ml/vocabularies/shapes#SchemaShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#link-target": [
{
"@id": "amf://id#34"
}
],
"http://a.ml/vocabularies/document#link-label": [
{
"@value": "response-schema"
}
],
"http://a.ml/vocabularies/document#link-target": [
{
"@id": "amf://id#34"
}
],
"http://a.ml/vocabularies/document#link-label": [
{
"@value": "response-schema"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#50/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#50"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(80,10)-(84,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#160/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#payload"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(79,8)-(84,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#160"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(77,7)-(84,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(78,8)-(79,0)]"
}
]
}
]
}
]
},
{
"@id": "amf://id#161",
"@type": [
"http://a.ml/vocabularies/apiContract#Response",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "422"
}
],
"http://a.ml/vocabularies/core#description": [
{
"@value": "Missing Mandatory Fields received from Channel"
}
],
"http://a.ml/vocabularies/apiContract#statusCode": [
{
"@value": "422"
}
],
"http://a.ml/vocabularies/apiContract#payload": [
{
"@id": "amf://id#52",
"@type": [
"http://a.ml/vocabularies/apiContract#Payload",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#mediaType": [
{
"@value": "application/xml"
}
],
"http://a.ml/vocabularies/shapes#schema": [
{
"@id": "amf://id#34/linked_9",
"@type": [
"http://a.ml/vocabularies/shapes#SchemaShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#link-target": [
{
"@id": "amf://id#34"
}
],
"http://a.ml/vocabularies/document#link-label": [
{
"@value": "response-schema"
}
],
"http://a.ml/vocabularies/document#link-target": [
{
"@id": "amf://id#34"
}
],
"http://a.ml/vocabularies/document#link-label": [
{
"@value": "response-schema"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#52/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#52"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(87,10)-(91,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#161/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#payload"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(86,8)-(91,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#161"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(84,7)-(91,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(85,8)-(86,0)]"
}
]
}
]
}
]
},
{
"@id": "amf://id#162",
"@type": [
"http://a.ml/vocabularies/apiContract#Response",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "500"
}
],
"http://a.ml/vocabularies/core#description": [
{
"@value": "Internal Server Error"
}
],
"http://a.ml/vocabularies/apiContract#statusCode": [
{
"@value": "500"
}
],
"http://a.ml/vocabularies/apiContract#payload": [
{
"@id": "amf://id#54",
"@type": [
"http://a.ml/vocabularies/apiContract#Payload",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#mediaType": [
{
"@value": "application/xml"
}
],
"http://a.ml/vocabularies/shapes#schema": [
{
"@id": "amf://id#34/linked_10",
"@type": [
"http://a.ml/vocabularies/shapes#SchemaShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#link-target": [
{
"@id": "amf://id#34"
}
],
"http://a.ml/vocabularies/document#link-label": [
{
"@value": "response-schema"
}
],
"http://a.ml/vocabularies/document#link-target": [
{
"@id": "amf://id#34"
}
],
"http://a.ml/vocabularies/document#link-label": [
{
"@value": "response-schema"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#54/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#54"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(94,10)-(97,7)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#162/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#payload"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(93,8)-(97,7)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#162"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(91,7)-(97,7)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(92,8)-(93,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#115/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#returns"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(27,3)-(97,7)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#115"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(18,2)-(97,7)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(20,3)-(22,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#114/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(16,2)-(18,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#114"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(14,0)-(97,7)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#name"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(15,2)-(16,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#113/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#source-vendor": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#113"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "RAML 0.8"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#version"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(4,0)-(6,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/core#name"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(2,0)-(3,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#113"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(2,0)-(97,7)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/apiContract#server"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(3,0)-(4,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document#version": [
{
"@value": "2.0.0"
}
],
"http://a.ml/vocabularies/document#references": [
{
"@id": "amf://id#1",
"@type": [
"http://a.ml/vocabularies/document#ExternalFragment",
"http://a.ml/vocabularies/document#Fragment",
"http://a.ml/vocabularies/document#Unit"
],
"http://a.ml/vocabularies/document#encodes": [
{
"@id": "amf://id#2",
"@type": [
"http://a.ml/vocabularies/document#ExternalDomainElement",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Document xmlns=\"urn:pil:bespoke.response\">\n\t<ResponseHdr>  \n\t\t<Status>NOTOK</Status> \t\n\t\t<OrgnlMsgId>ORGNLMSGID001</OrgnlMsgId> \n\t\t<Code>406</Code> \n  </ResponseHdr>\n\t<ResponseBody>  \n\t<ResponseInfAndSts>\n\t\t<RsnInf> \n\t\t\t<Status>Rejected</Status>\n\t\t\t<RsnCd>PL001</RsnCd>   \n\t\t\t<RsnCdDesc>Payment engine route is not determined</RsnCdDesc>\n\t\t\t<AddtlInf>Actual Error Message</AddtlInf>\n\t\t</RsnInf>\n  </ResponseInfAndSts>\n\t</ResponseBody>\n</Document>"
}
]
}
],
"http://a.ml/vocabularies/document#version": [
{
"@value": "2.0.0"
}
]
},
{
"@id": "amf://id#3",
"@type": [
"http://a.ml/vocabularies/document#ExternalFragment",
"http://a.ml/vocabularies/document#Fragment",
"http://a.ml/vocabularies/document#Unit"
],
"http://a.ml/vocabularies/document#encodes": [
{
"@id": "amf://id#4",
"@type": [
"http://a.ml/vocabularies/document#ExternalDomainElement",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Document xmlns=\"urn:pil:bespoke.response\">\n\t<ResponseHdr>  \n\t\t<Status>NOTOK</Status> \t\n\t\t<OrgnlMsgId>ORGNLMSGID001</OrgnlMsgId> \n\t\t<Code>400</Code> \n    <CodeDescription>Invalid Request Received from Channel (Schema/Header)</CodeDescription>\n    <AddtlInf>Actual Error Message</AddtlInf>\n\t</ResponseHdr>\n</Document>"
}
]
}
],
"http://a.ml/vocabularies/document#version": [
{
"@value": "2.0.0"
}
]
},
{
"@id": "amf://id#5",
"@type": [
"http://a.ml/vocabularies/document#ExternalFragment",
"http://a.ml/vocabularies/document#Fragment",
"http://a.ml/vocabularies/document#Unit"
],
"http://a.ml/vocabularies/document#encodes": [
{
"@id": "amf://id#6",
"@type": [
"http://a.ml/vocabularies/document#ExternalDomainElement",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Document xmlns=\"urn:pil:bespoke.response\">\n    <ResponseHdr>  \n        <Status>OK</Status> \t\n        <OrgnlMsgId>ORGNLMSGID001</OrgnlMsgId> <!--Mapped from received  payment instruction request. Xpath :  Document/CstmrCdtTrfInitn/GrpHdr/MsgId --> \n        <Code>200</Code> \n    </ResponseHdr>\n    <ResponseBody>  \n        <ResponseInfAndSts>\n            <RsnInf> \n                <Status>PaymentInstrSubmitted</Status>\n                <RsnCd>PI001</RsnCd>   \n                <RsnCdDesc>Payment Instruction successfully Submitted</RsnCdDesc>\n                <AddtlInf>Additional Details</AddtlInf>\n            </RsnInf>\n            <ProcessorRsnInf>  \n                <ProcessorStatus>BIWAITQ</ProcessorStatus> <!--Mapped from <P_MSG_STS> -->\n            </ProcessorRsnInf>\n        </ResponseInfAndSts>\n    </ResponseBody>\n</Document>"
}
]
}
],
"http://a.ml/vocabularies/document#version": [
{
"@value": "2.0.0"
}
]
},
{
"@id": "amf://id#7",
"@type": [
"http://a.ml/vocabularies/document#ExternalFragment",
"http://a.ml/vocabularies/document#Fragment",
"http://a.ml/vocabularies/document#Unit"
],
"http://a.ml/vocabularies/document#encodes": [
{
"@id": "amf://id#8",
"@type": [
"http://a.ml/vocabularies/document#ExternalDomainElement",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Document xmlns=\"urn:pil:bespoke.response\">\n\t<ResponseHdr>  \n\t\t<Status>OK</Status> \t\n\t\t<OrgnlMsgId>ORGNLMSGID001</OrgnlMsgId>\n\t\t<Code>202</Code>\n\t</ResponseHdr>\n\t<ResponseBody>  \n\t<ResponseInfAndSts>\n\t\t<RsnInf> \n\t\t\t<Status>PaymentReceived</Status>\n\t\t\t<RsnCd>PI001</RsnCd>   \n\t\t\t<RsnCdDesc>Payment Instruction successfully submitted and status is Received</RsnCdDesc>\n\t\t</RsnInf>\n\t</ResponseInfAndSts>\n\t</ResponseBody>\n</Document>"
}
]
}
],
"http://a.ml/vocabularies/document#version": [
{
"@value": "2.0.0"
}
]
},
{
"@id": "amf://id#9",
"@type": [
"http://a.ml/vocabularies/document#ExternalFragment",
"http://a.ml/vocabularies/document#Fragment",
"http://a.ml/vocabularies/document#Unit"
],
"http://a.ml/vocabularies/document#encodes": [
{
"@id": "amf://id#10",
"@type": [
"http://a.ml/vocabularies/document#ExternalDomainElement",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!--Generated by SWIFTStandards Workstation (build:R6.1.0.2) on 2009 Jan 08 17:30:53-->\n<xs:schema xmlns=\"urn:iso:std:iso:20022:tech:xsd:pain.001.001.03\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" targetNamespace=\"urn:iso:std:iso:20022:tech:xsd:pain.001.001.03\">\n    <xs:element name=\"Document\" type=\"Document\"/>\n    <xs:complexType name=\"AccountIdentification4Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"IBAN\" type=\"IBAN2007Identifier\"/>\n                <xs:element name=\"Othr\" type=\"GenericAccountIdentification1\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"AccountSchemeName1Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"ExternalAccountIdentification1Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"ActiveOrHistoricCurrencyAndAmount_SimpleType\">\n        <xs:restriction base=\"xs:decimal\">\n            <xs:minInclusive value=\"0\"/>\n            <xs:fractionDigits value=\"5\"/>\n            <xs:totalDigits value=\"18\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"ActiveOrHistoricCurrencyAndAmount\">\n        <xs:simpleContent>\n            <xs:extension base=\"ActiveOrHistoricCurrencyAndAmount_SimpleType\">\n                <xs:attribute name=\"Ccy\" type=\"ActiveOrHistoricCurrencyCode\" use=\"required\"/>\n            </xs:extension>\n        </xs:simpleContent>\n    </xs:complexType>\n    <xs:simpleType name=\"ActiveOrHistoricCurrencyCode\">\n        <xs:restriction base=\"xs:string\">\n            <xs:pattern value=\"[A-Z]{3,3}\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"AddressType2Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"ADDR\"/>\n            <xs:enumeration value=\"PBOX\"/>\n            <xs:enumeration value=\"HOME\"/>\n            <xs:enumeration value=\"BIZZ\"/>\n            <xs:enumeration value=\"MLTO\"/>\n            <xs:enumeration value=\"DLVY\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"AmountType3Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"InstdAmt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n                <xs:element name=\"EqvtAmt\" type=\"EquivalentAmount2\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"AnyBICIdentifier\">\n        <xs:restriction base=\"xs:string\">\n            <xs:pattern value=\"[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"Authorisation1Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"Authorisation1Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max128Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"Authorisation1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"AUTH\"/>\n            <xs:enumeration value=\"FDET\"/>\n            <xs:enumeration value=\"FSUM\"/>\n            <xs:enumeration value=\"ILEV\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"BICIdentifier\">\n        <xs:restriction base=\"xs:string\">\n            <xs:pattern value=\"[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"BaseOneRate\">\n        <xs:restriction base=\"xs:decimal\">\n            <xs:fractionDigits value=\"10\"/>\n            <xs:totalDigits value=\"11\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"BatchBookingIndicator\">\n        <xs:restriction base=\"xs:boolean\"/>\n    </xs:simpleType>\n    <xs:complexType name=\"BranchAndFinancialInstitutionIdentification4\">\n        <xs:sequence>\n            <xs:element name=\"FinInstnId\" type=\"FinancialInstitutionIdentification7\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"BrnchId\" type=\"BranchData2\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"BranchData2\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Id\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Nm\" type=\"Max140Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"PstlAdr\" type=\"PostalAddress6\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"CashAccount16\">\n        <xs:sequence>\n            <xs:element name=\"Id\" type=\"AccountIdentification4Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Tp\" type=\"CashAccountType2\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Ccy\" type=\"ActiveOrHistoricCurrencyCode\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Nm\" type=\"Max70Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"CashAccountType2\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"CashAccountType4Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"CashAccountType4Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"CASH\"/>\n            <xs:enumeration value=\"CHAR\"/>\n            <xs:enumeration value=\"COMM\"/>\n            <xs:enumeration value=\"TAXE\"/>\n            <xs:enumeration value=\"CISH\"/>\n            <xs:enumeration value=\"TRAS\"/>\n            <xs:enumeration value=\"SACC\"/>\n            <xs:enumeration value=\"CACC\"/>\n            <xs:enumeration value=\"SVGS\"/>\n            <xs:enumeration value=\"ONDP\"/>\n            <xs:enumeration value=\"MGLD\"/>\n            <xs:enumeration value=\"NREX\"/>\n            <xs:enumeration value=\"MOMA\"/>\n            <xs:enumeration value=\"LOAN\"/>\n            <xs:enumeration value=\"SLRY\"/>\n            <xs:enumeration value=\"ODFT\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"CategoryPurpose1Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"ExternalCategoryPurpose1Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"ChargeBearerType1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"DEBT\"/>\n            <xs:enumeration value=\"CRED\"/>\n            <xs:enumeration value=\"SHAR\"/>\n            <xs:enumeration value=\"SLEV\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"Cheque6\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ChqTp\" type=\"ChequeType2Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ChqNb\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ChqFr\" type=\"NameAndAddress10\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"DlvryMtd\" type=\"ChequeDeliveryMethod1Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"DlvrTo\" type=\"NameAndAddress10\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"InstrPrty\" type=\"Priority2Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ChqMtrtyDt\" type=\"ISODate\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"FrmsCd\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"2\" minOccurs=\"0\" name=\"MemoFld\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RgnlClrZone\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"PrtLctn\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"ChequeDelivery1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"MLDB\"/>\n            <xs:enumeration value=\"MLCD\"/>\n            <xs:enumeration value=\"MLFA\"/>\n            <xs:enumeration value=\"CRDB\"/>\n            <xs:enumeration value=\"CRCD\"/>\n            <xs:enumeration value=\"CRFA\"/>\n            <xs:enumeration value=\"PUDB\"/>\n            <xs:enumeration value=\"PUCD\"/>\n            <xs:enumeration value=\"PUFA\"/>\n            <xs:enumeration value=\"RGDB\"/>\n            <xs:enumeration value=\"RGCD\"/>\n            <xs:enumeration value=\"RGFA\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"ChequeDeliveryMethod1Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"ChequeDelivery1Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"ChequeType2Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"CCHQ\"/>\n            <xs:enumeration value=\"CCCH\"/>\n            <xs:enumeration value=\"BCHQ\"/>\n            <xs:enumeration value=\"DRFT\"/>\n            <xs:enumeration value=\"ELDR\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"ClearingSystemIdentification2Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"ExternalClearingSystemIdentification1Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"ClearingSystemMemberIdentification2\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ClrSysId\" type=\"ClearingSystemIdentification2Choice\"/>\n            <xs:element name=\"MmbId\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"ContactDetails2\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"NmPrfx\" type=\"NamePrefix1Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Nm\" type=\"Max140Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"PhneNb\" type=\"PhoneNumber\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"MobNb\" type=\"PhoneNumber\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"FaxNb\" type=\"PhoneNumber\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"EmailAdr\" type=\"Max2048Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Othr\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"CountryCode\">\n        <xs:restriction base=\"xs:string\">\n            <xs:pattern value=\"[A-Z]{2,2}\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"CreditDebitCode\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"CRDT\"/>\n            <xs:enumeration value=\"DBIT\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"CreditTransferTransactionInformation10\">\n        <xs:sequence>\n            <xs:element name=\"PmtId\" type=\"PaymentIdentification1\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"PmtTpInf\" type=\"PaymentTypeInformation19\"/>\n            <xs:element name=\"Amt\" type=\"AmountType3Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"XchgRateInf\" type=\"ExchangeRateInformation1\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ChrgBr\" type=\"ChargeBearerType1Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ChqInstr\" type=\"Cheque6\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"UltmtDbtr\" type=\"PartyIdentification32\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"IntrmyAgt1\" type=\"BranchAndFinancialInstitutionIdentification4\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"IntrmyAgt1Acct\" type=\"CashAccount16\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"IntrmyAgt2\" type=\"BranchAndFinancialInstitutionIdentification4\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"IntrmyAgt2Acct\" type=\"CashAccount16\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"IntrmyAgt3\" type=\"BranchAndFinancialInstitutionIdentification4\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"IntrmyAgt3Acct\" type=\"CashAccount16\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CdtrAgt\" type=\"BranchAndFinancialInstitutionIdentification4\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CdtrAgtAcct\" type=\"CashAccount16\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Cdtr\" type=\"PartyIdentification32\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CdtrAcct\" type=\"CashAccount16\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"UltmtCdtr\" type=\"PartyIdentification32\"/>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"InstrForCdtrAgt\" type=\"InstructionForCreditorAgent1\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"InstrForDbtrAgt\" type=\"Max140Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Purp\" type=\"Purpose2Choice\"/>\n            <xs:element maxOccurs=\"10\" minOccurs=\"0\" name=\"RgltryRptg\" type=\"RegulatoryReporting3\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Tax\" type=\"TaxInformation3\"/>\n            <xs:element maxOccurs=\"10\" minOccurs=\"0\" name=\"RltdRmtInf\" type=\"RemittanceLocation2\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RmtInf\" type=\"RemittanceInformation5\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"CreditorReferenceInformation2\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Tp\" type=\"CreditorReferenceType2\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Ref\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"CreditorReferenceType1Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"DocumentType3Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"CreditorReferenceType2\">\n        <xs:sequence>\n            <xs:element name=\"CdOrPrtry\" type=\"CreditorReferenceType1Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Issr\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"CustomerCreditTransferInitiationV03\">\n        <xs:sequence>\n            <xs:element name=\"GrpHdr\" type=\"GroupHeader32\"/>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"1\" name=\"PmtInf\" type=\"PaymentInstructionInformation3\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"DateAndPlaceOfBirth\">\n        <xs:sequence>\n            <xs:element name=\"BirthDt\" type=\"ISODate\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"PrvcOfBirth\" type=\"Max35Text\"/>\n            <xs:element name=\"CityOfBirth\" type=\"Max35Text\"/>\n            <xs:element name=\"CtryOfBirth\" type=\"CountryCode\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"DatePeriodDetails\">\n        <xs:sequence>\n            <xs:element name=\"FrDt\" type=\"ISODate\"/>\n            <xs:element name=\"ToDt\" type=\"ISODate\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"DecimalNumber\">\n        <xs:restriction base=\"xs:decimal\">\n            <xs:fractionDigits value=\"17\"/>\n            <xs:totalDigits value=\"18\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"Document\">\n        <xs:sequence>\n            <xs:element name=\"CstmrCdtTrfInitn\" type=\"CustomerCreditTransferInitiationV03\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"DocumentAdjustment1\">\n        <xs:sequence>\n            <xs:element name=\"Amt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CdtDbtInd\" type=\"CreditDebitCode\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Rsn\" type=\"Max4Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"AddtlInf\" type=\"Max140Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"DocumentType3Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"RADM\"/>\n            <xs:enumeration value=\"RPIN\"/>\n            <xs:enumeration value=\"FXDR\"/>\n            <xs:enumeration value=\"DISP\"/>\n            <xs:enumeration value=\"PUOR\"/>\n            <xs:enumeration value=\"SCOR\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"DocumentType5Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"MSIN\"/>\n            <xs:enumeration value=\"CNFA\"/>\n            <xs:enumeration value=\"DNFA\"/>\n            <xs:enumeration value=\"CINV\"/>\n            <xs:enumeration value=\"CREN\"/>\n            <xs:enumeration value=\"DEBN\"/>\n            <xs:enumeration value=\"HIRI\"/>\n            <xs:enumeration value=\"SBIN\"/>\n            <xs:enumeration value=\"CMCN\"/>\n            <xs:enumeration value=\"SOAC\"/>\n            <xs:enumeration value=\"DISP\"/>\n            <xs:enumeration value=\"BOLD\"/>\n            <xs:enumeration value=\"VCHR\"/>\n            <xs:enumeration value=\"AROI\"/>\n            <xs:enumeration value=\"TSUT\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"EquivalentAmount2\">\n        <xs:sequence>\n            <xs:element name=\"Amt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n            <xs:element name=\"CcyOfTrf\" type=\"ActiveOrHistoricCurrencyCode\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"ExchangeRateInformation1\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"XchgRate\" type=\"BaseOneRate\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RateTp\" type=\"ExchangeRateType1Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CtrctId\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"ExchangeRateType1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"SPOT\"/>\n            <xs:enumeration value=\"SALE\"/>\n            <xs:enumeration value=\"AGRD\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"ExternalAccountIdentification1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"4\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"ExternalCategoryPurpose1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"4\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"ExternalClearingSystemIdentification1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"5\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"ExternalFinancialInstitutionIdentification1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"4\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"ExternalLocalInstrument1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"35\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"ExternalOrganisationIdentification1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"4\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"ExternalPersonIdentification1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"4\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"ExternalPurpose1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"4\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"ExternalServiceLevel1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"4\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"FinancialIdentificationSchemeName1Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"ExternalFinancialInstitutionIdentification1Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"FinancialInstitutionIdentification7\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"BIC\" type=\"BICIdentifier\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ClrSysMmbId\" type=\"ClearingSystemMemberIdentification2\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Nm\" type=\"Max140Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"PstlAdr\" type=\"PostalAddress6\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Othr\" type=\"GenericFinancialIdentification1\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"GenericAccountIdentification1\">\n        <xs:sequence>\n            <xs:element name=\"Id\" type=\"Max34Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"SchmeNm\" type=\"AccountSchemeName1Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Issr\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"GenericFinancialIdentification1\">\n        <xs:sequence>\n            <xs:element name=\"Id\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"SchmeNm\" type=\"FinancialIdentificationSchemeName1Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Issr\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"GenericOrganisationIdentification1\">\n        <xs:sequence>\n            <xs:element name=\"Id\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"SchmeNm\" type=\"OrganisationIdentificationSchemeName1Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Issr\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"GenericPersonIdentification1\">\n        <xs:sequence>\n            <xs:element name=\"Id\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"SchmeNm\" type=\"PersonIdentificationSchemeName1Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Issr\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"GroupHeader32\">\n        <xs:sequence>\n            <xs:element name=\"MsgId\" type=\"Max35Text\"/>\n            <xs:element name=\"CreDtTm\" type=\"ISODateTime\"/>\n            <xs:element maxOccurs=\"2\" minOccurs=\"0\" name=\"Authstn\" type=\"Authorisation1Choice\"/>\n            <xs:element name=\"NbOfTxs\" type=\"Max15NumericText\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CtrlSum\" type=\"DecimalNumber\"/>\n            <xs:element name=\"InitgPty\" type=\"PartyIdentification32\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"FwdgAgt\" type=\"BranchAndFinancialInstitutionIdentification4\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"IBAN2007Identifier\">\n        <xs:restriction base=\"xs:string\">\n            <xs:pattern value=\"[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"ISODate\">\n        <xs:restriction base=\"xs:date\"/>\n    </xs:simpleType>\n    <xs:simpleType name=\"ISODateTime\">\n        <xs:restriction base=\"xs:dateTime\"/>\n    </xs:simpleType>\n    <xs:simpleType name=\"Instruction3Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"CHQB\"/>\n            <xs:enumeration value=\"HOLD\"/>\n            <xs:enumeration value=\"PHOB\"/>\n            <xs:enumeration value=\"TELB\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"InstructionForCreditorAgent1\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Cd\" type=\"Instruction3Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"InstrInf\" type=\"Max140Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"LocalInstrument2Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"ExternalLocalInstrument1Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"Max10Text\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"10\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"Max128Text\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"128\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"Max140Text\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"140\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"Max15NumericText\">\n        <xs:restriction base=\"xs:string\">\n            <xs:pattern value=\"[0-9]{1,15}\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"Max16Text\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"16\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"Max2048Text\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"2048\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"Max34Text\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"34\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"Max35Text\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"35\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"Max4Text\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"4\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"Max70Text\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"70\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"NameAndAddress10\">\n        <xs:sequence>\n            <xs:element name=\"Nm\" type=\"Max140Text\"/>\n            <xs:element name=\"Adr\" type=\"PostalAddress6\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"NamePrefix1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"DOCT\"/>\n            <xs:enumeration value=\"MIST\"/>\n            <xs:enumeration value=\"MISS\"/>\n            <xs:enumeration value=\"MADM\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"Number\">\n        <xs:restriction base=\"xs:decimal\">\n            <xs:fractionDigits value=\"0\"/>\n            <xs:totalDigits value=\"18\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"OrganisationIdentification4\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"BICOrBEI\" type=\"AnyBICIdentifier\"/>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Othr\" type=\"GenericOrganisationIdentification1\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"OrganisationIdentificationSchemeName1Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"ExternalOrganisationIdentification1Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"Party6Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"OrgId\" type=\"OrganisationIdentification4\"/>\n                <xs:element name=\"PrvtId\" type=\"PersonIdentification5\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"PartyIdentification32\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Nm\" type=\"Max140Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"PstlAdr\" type=\"PostalAddress6\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Id\" type=\"Party6Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CtryOfRes\" type=\"CountryCode\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CtctDtls\" type=\"ContactDetails2\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"PaymentIdentification1\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"InstrId\" type=\"Max35Text\"/>\n            <xs:element name=\"EndToEndId\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"PaymentInstructionInformation3\">\n        <xs:sequence>\n            <xs:element name=\"PmtInfId\" type=\"Max35Text\"/>\n            <xs:element name=\"PmtMtd\" type=\"PaymentMethod3Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"BtchBookg\" type=\"BatchBookingIndicator\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"NbOfTxs\" type=\"Max15NumericText\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CtrlSum\" type=\"DecimalNumber\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"PmtTpInf\" type=\"PaymentTypeInformation19\"/>\n            <xs:element name=\"ReqdExctnDt\" type=\"ISODate\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"PoolgAdjstmntDt\" type=\"ISODate\"/>\n            <xs:element name=\"Dbtr\" type=\"PartyIdentification32\"/>\n            <xs:element name=\"DbtrAcct\" type=\"CashAccount16\"/>\n            <xs:element name=\"DbtrAgt\" type=\"BranchAndFinancialInstitutionIdentification4\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"DbtrAgtAcct\" type=\"CashAccount16\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"UltmtDbtr\" type=\"PartyIdentification32\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ChrgBr\" type=\"ChargeBearerType1Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ChrgsAcct\" type=\"CashAccount16\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ChrgsAcctAgt\" type=\"BranchAndFinancialInstitutionIdentification4\"/>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"1\" name=\"CdtTrfTxInf\" type=\"CreditTransferTransactionInformation10\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"PaymentMethod3Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"CHK\"/>\n            <xs:enumeration value=\"TRF\"/>\n            <xs:enumeration value=\"TRA\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"PaymentTypeInformation19\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"InstrPrty\" type=\"Priority2Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"SvcLvl\" type=\"ServiceLevel8Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"LclInstrm\" type=\"LocalInstrument2Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CtgyPurp\" type=\"CategoryPurpose1Choice\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"PercentageRate\">\n        <xs:restriction base=\"xs:decimal\">\n            <xs:fractionDigits value=\"10\"/>\n            <xs:totalDigits value=\"11\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"PersonIdentification5\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"DtAndPlcOfBirth\" type=\"DateAndPlaceOfBirth\"/>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Othr\" type=\"GenericPersonIdentification1\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"PersonIdentificationSchemeName1Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"ExternalPersonIdentification1Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"PhoneNumber\">\n        <xs:restriction base=\"xs:string\">\n            <xs:pattern value=\"\\+[0-9]{1,3}-[0-9()+\\-]{1,30}\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"PostalAddress6\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"AdrTp\" type=\"AddressType2Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Dept\" type=\"Max70Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"SubDept\" type=\"Max70Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"StrtNm\" type=\"Max70Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"BldgNb\" type=\"Max16Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"PstCd\" type=\"Max16Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"TwnNm\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CtrySubDvsn\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Ctry\" type=\"CountryCode\"/>\n            <xs:element maxOccurs=\"7\" minOccurs=\"0\" name=\"AdrLine\" type=\"Max70Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"Priority2Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"HIGH\"/>\n            <xs:enumeration value=\"NORM\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"Purpose2Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"ExternalPurpose1Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"ReferredDocumentInformation3\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Tp\" type=\"ReferredDocumentType2\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Nb\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RltdDt\" type=\"ISODate\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"ReferredDocumentType1Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"DocumentType5Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"ReferredDocumentType2\">\n        <xs:sequence>\n            <xs:element name=\"CdOrPrtry\" type=\"ReferredDocumentType1Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Issr\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"RegulatoryAuthority2\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Nm\" type=\"Max140Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Ctry\" type=\"CountryCode\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"RegulatoryReporting3\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"DbtCdtRptgInd\" type=\"RegulatoryReportingType1Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Authrty\" type=\"RegulatoryAuthority2\"/>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Dtls\" type=\"StructuredRegulatoryReporting3\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"RegulatoryReportingType1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"CRED\"/>\n            <xs:enumeration value=\"DEBT\"/>\n            <xs:enumeration value=\"BOTH\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"RemittanceAmount1\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"DuePyblAmt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"DscntApldAmt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CdtNoteAmt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"TaxAmt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"AdjstmntAmtAndRsn\" type=\"DocumentAdjustment1\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RmtdAmt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"RemittanceInformation5\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Ustrd\" type=\"Max140Text\"/>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Strd\" type=\"StructuredRemittanceInformation7\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"RemittanceLocation2\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RmtId\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RmtLctnMtd\" type=\"RemittanceLocationMethod2Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RmtLctnElctrncAdr\" type=\"Max2048Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RmtLctnPstlAdr\" type=\"NameAndAddress10\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"RemittanceLocationMethod2Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"FAXI\"/>\n            <xs:enumeration value=\"EDIC\"/>\n            <xs:enumeration value=\"URID\"/>\n            <xs:enumeration value=\"EMAL\"/>\n            <xs:enumeration value=\"POST\"/>\n            <xs:enumeration value=\"SMSM\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"ServiceLevel8Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"ExternalServiceLevel1Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"StructuredRegulatoryReporting3\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Tp\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Dt\" type=\"ISODate\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Ctry\" type=\"CountryCode\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Cd\" type=\"Max10Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Amt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Inf\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"StructuredRemittanceInformation7\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"RfrdDocInf\" type=\"ReferredDocumentInformation3\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RfrdDocAmt\" type=\"RemittanceAmount1\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CdtrRefInf\" type=\"CreditorReferenceInformation2\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Invcr\" type=\"PartyIdentification32\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Invcee\" type=\"PartyIdentification32\"/>\n            <xs:element maxOccurs=\"3\" minOccurs=\"0\" name=\"AddtlRmtInf\" type=\"Max140Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"TaxAmount1\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Rate\" type=\"PercentageRate\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"TaxblBaseAmt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"TtlAmt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Dtls\" type=\"TaxRecordDetails1\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"TaxAuthorisation1\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Titl\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Nm\" type=\"Max140Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"TaxInformation3\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Cdtr\" type=\"TaxParty1\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Dbtr\" type=\"TaxParty2\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"AdmstnZn\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RefNb\" type=\"Max140Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Mtd\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"TtlTaxblBaseAmt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"TtlTaxAmt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Dt\" type=\"ISODate\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"SeqNb\" type=\"Number\"/>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Rcrd\" type=\"TaxRecord1\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"TaxParty1\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"TaxId\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RegnId\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"TaxTp\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"TaxParty2\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"TaxId\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RegnId\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"TaxTp\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Authstn\" type=\"TaxAuthorisation1\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"TaxPeriod1\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Yr\" type=\"ISODate\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Tp\" type=\"TaxRecordPeriod1Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"FrToDt\" type=\"DatePeriodDetails\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"TaxRecord1\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Tp\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Ctgy\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CtgyDtls\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"DbtrSts\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CertId\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"FrmsCd\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Prd\" type=\"TaxPeriod1\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"TaxAmt\" type=\"TaxAmount1\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"AddtlInf\" type=\"Max140Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"TaxRecordDetails1\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Prd\" type=\"TaxPeriod1\"/>\n            <xs:element name=\"Amt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"TaxRecordPeriod1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"MM01\"/>\n            <xs:enumeration value=\"MM02\"/>\n            <xs:enumeration value=\"MM03\"/>\n            <xs:enumeration value=\"MM04\"/>\n            <xs:enumeration value=\"MM05\"/>\n            <xs:enumeration value=\"MM06\"/>\n            <xs:enumeration value=\"MM07\"/>\n            <xs:enumeration value=\"MM08\"/>\n            <xs:enumeration value=\"MM09\"/>\n            <xs:enumeration value=\"MM10\"/>\n            <xs:enumeration value=\"MM11\"/>\n            <xs:enumeration value=\"MM12\"/>\n            <xs:enumeration value=\"QTR1\"/>\n            <xs:enumeration value=\"QTR2\"/>\n            <xs:enumeration value=\"QTR3\"/>\n            <xs:enumeration value=\"QTR4\"/>\n            <xs:enumeration value=\"HLF1\"/>\n            <xs:enumeration value=\"HLF2\"/>\n        </xs:restriction>\n    </xs:simpleType>\n</xs:schema>\n"
}
]
}
],
"http://a.ml/vocabularies/document#version": [
{
"@value": "2.0.0"
}
]
},
{
"@id": "amf://id#11",
"@type": [
"http://a.ml/vocabularies/document#ExternalFragment",
"http://a.ml/vocabularies/document#Fragment",
"http://a.ml/vocabularies/document#Unit"
],
"http://a.ml/vocabularies/document#encodes": [
{
"@id": "amf://id#12",
"@type": [
"http://a.ml/vocabularies/document#ExternalDomainElement",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "headers: \n  X-HSBC-E2E-Trust-Token:\n    description: Contains Identity information about the authentication caller (or subject)\n    required: false\n  X-HSBC-Session-Id:\n    description: Contains the identifier which represents a subject's authenticated session with an Identity Provider\n    required: false"
}
],
"http://a.ml/vocabularies/core#mediaType": [
{
"@value": "application/raml+yaml"
}
]
}
],
"http://a.ml/vocabularies/document#version": [
{
"@value": "2.0.0"
}
]
},
{
"@id": "amf://id#13",
"@type": [
"http://a.ml/vocabularies/document#ExternalFragment",
"http://a.ml/vocabularies/document#Fragment",
"http://a.ml/vocabularies/document#Unit"
],
"http://a.ml/vocabularies/document#encodes": [
{
"@id": "amf://id#14",
"@type": [
"http://a.ml/vocabularies/document#ExternalDomainElement",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Document xmlns=\"urn:pil:bespoke.response\">\n\t<ResponseHdr>  \n\t\t<Status>NOTOK</Status> \t\n\t\t<OrgnlMsgId>ORGNLMSGID001</OrgnlMsgId> <!--Mapped from received  payment instruction request. Xpath :  Document/CstmrCdtTrfInitn/GrpHdr/MsgId --> \n\t\t<Code>422</Code> \n\t</ResponseHdr>\n\t<ResponseBody>  \n\t<ResponseInfAndSts>\n\t\t<RsnInf> \n\t\t\t<Status>Rejected</Status>\n\t\t\t<RsnCd>PL002</RsnCd>   \n\t\t\t<RsnCdDesc>Required mandatory field is missing </RsnCdDesc>\n\t\t\t<AddtlInf>Actual Error Message</AddtlInf>\n\t\t</RsnInf>\n\t</ResponseInfAndSts>\n\t</ResponseBody>\n</Document>"
}
]
}
],
"http://a.ml/vocabularies/document#version": [
{
"@value": "2.0.0"
}
]
},
{
"@id": "amf://id#15",
"@type": [
"http://a.ml/vocabularies/document#ExternalFragment",
"http://a.ml/vocabularies/document#Fragment",
"http://a.ml/vocabularies/document#Unit"
],
"http://a.ml/vocabularies/document#encodes": [
{
"@id": "amf://id#16",
"@type": [
"http://a.ml/vocabularies/document#ExternalDomainElement",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "headers: \n  X-HSBC-Source-System-Id:\n    description: Uniquely identifies the Source system instance as registered in the EIM Application\n    example: \"8428866\"\n    type: string\n    minLength: 1\n    required: true\n  X-HSBC-SoR-CountryCode:\n    description: The country of the System of Record (SoR) that the data being accessed resides in as defined by ISO 3166-1 alpha-2 codes. This is mandatory for USRTP Initiation \n    example: \"GB\"\n    type: string\n    pattern: ^[A-Z]{2}$\n    required: false\n  X-HSBC-Session-Correlation-Id:\n    description: An identifier that is connected to an authenticated session but cannot be used in itself to represent an authenticated session\n    example: \"4038af76-2531-4a00-971c-faf1be6f5f92\"\n    type: string\n    minLength: 1\n    required: true\n  X-HSBC-Request-Correlation-Id:\n    description: Request Correlation ID to correlate all messages from user for a given request\n    example: \"2d933d80-be43-11e7-92e1-005056a61740\"\n    type: string\n    minLength: 1\n    required: true\n  X-HSBC-Routing-Indicator-Id:\n    description: Payments Route Indicator (this will be deprecated soon)\n    example: \"USRTP\"\n    type: string\n    minLength: 1\n    maxLength: 255\n    required: true\n  X-HSBC-Chnl-Group-Member:\n    description: HSBC Group member\n    type: string\n    example: \"HBAP\"\n    required: false\n  User-Agent:\n    description: User Agent form user's machine/browser\n    example: \"Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405\"\n    required: false\n  X-HSBC-GBGF:\n    description: The Global Business or Global Function (GBGF) as defined by the Business.\n    type: string\n    example: \"RBWM\"\n    pattern: ^[A-Z]{1,4}$\n    required: false\n"
}
],
"http://a.ml/vocabularies/core#mediaType": [
{
"@value": "application/raml+yaml"
}
]
}
],
"http://a.ml/vocabularies/document#version": [
{
"@value": "2.0.0"
}
]
},
{
"@id": "amf://id#17",
"@type": [
"http://a.ml/vocabularies/document#ExternalFragment",
"http://a.ml/vocabularies/document#Fragment",
"http://a.ml/vocabularies/document#Unit"
],
"http://a.ml/vocabularies/document#encodes": [
{
"@id": "amf://id#18",
"@type": [
"http://a.ml/vocabularies/document#ExternalDomainElement",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Document xmlns=\"urn:pil:bespoke.response\">\n\t<ResponseHdr>  \n\t\t<Status>NOTOK</Status> \t\n\t\t<OrgnlMsgId>ORGNLMSGID001</OrgnlMsgId> \n\t\t<Code>405</Code> \n\t\t<CodeDescription>Method Not Allowed</CodeDescription>\n    <AddtlInf>Actual Error Message</AddtlInf>\n\t</ResponseHdr>\n</Document>"
}
]
}
],
"http://a.ml/vocabularies/document#version": [
{
"@value": "2.0.0"
}
]
},
{
"@id": "amf://id#19",
"@type": [
"http://a.ml/vocabularies/document#ExternalFragment",
"http://a.ml/vocabularies/document#Fragment",
"http://a.ml/vocabularies/document#Unit"
],
"http://a.ml/vocabularies/document#encodes": [
{
"@id": "amf://id#20",
"@type": [
"http://a.ml/vocabularies/document#ExternalDomainElement",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns=\"urn:pil:bespoke.response\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" targetNamespace=\"urn:pil:bespoke.response\">\n    <xs:element name=\"Document\" type=\"DocumentType\"/>\n    <xs:complexType name=\"ResponseHdrType\">\n        <xs:sequence>\n\t      \t<xs:element name=\"Status\" type=\"StatusType\"/>\n\t      \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"OrgnlMsgId\" type=\"xs:string\"/>  <!--29/01/019 - Changed type as \"string\" and removed the Min and Max Length -->\n\t      \t<xs:element name=\"Code\" type=\"CodeType\"/>\n\t      \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CodeDescription\" type=\"xs:string\"/> <!--29/01/019 - Changed type as \"string\" and removed the Min and Max Length -->\n\t\t  \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"AddtlInf\" type=\"xs:string\"/> <!--29/01/019 - Changed type as \"string\" and removed the Min and Max Length -->\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"RsnInfType\">\n        <xs:sequence>\n\t      \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Status\" type=\"xs:string\"/> <!--29/01/019 - Changed type as \"string\" and removed the Min and Max Length -->\n\t      \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RsnCd\" type=\"RsnCdType\"/>\n\t      \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RsnCdDesc\" type=\"xs:string\"/> <!--29/01/019 - Changed type as \"string\" and removed the Min and Max Length -->\n\t      \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"AddtlInf\" type=\"xs:string\"/>     <!--29/01/019 - Changed type as \"string\" and removed the Min and Max Length. Also changed the maxOccurs=\"1\" from \"10\" -->\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"ProcessorRsnInfType\">\n        <xs:sequence>\n\t      \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ProcessorStatus\" type=\"xs:string\"/> <!--29/01/019 - Changed type as \"string\" and removed the Min and Max Length -->\n\t      \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ProcessorRsnCd\" type=\"xs:string\"/> <!--29/01/019 - Changed type as \"string\" and removed the Min and Max Length -->\n\t      \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ProcessorRsnCdDesc\" type=\"xs:string\"/> <!--29/01/019 - Changed type as \"string\" and removed the Min and Max Length -->\n\t      \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ProcessorAddtlInf\" type=\"xs:string\"/> <!--29/01/019 - Changed type as \"string\" and removed the Min and Max Length -->\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"ResponseInfAndStsType\">\n        <xs:sequence>\n      \t\t<xs:element name=\"RsnInf\" type=\"RsnInfType\"/>   <!--19/11/2018 - Marked as Mandatory. removed maxOccurs=\"1\" minOccurs=\"0\"  -->\n      \t\t<xs:element maxOccurs=\"10\" minOccurs=\"0\" name=\"ProcessorRsnInf\" type=\"ProcessorRsnInfType\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"ResponseBodyType\">\n        <xs:sequence>\n      \t\t<xs:element maxOccurs=\"200\" minOccurs=\"1\" name=\"ResponseInfAndSts\" type=\"ResponseInfAndStsType\"/> <!--19/11/2018 - Marked as Mandatory. Changed minOccurs=\"1\" from \"0\" -->\n        </xs:sequence>\n     </xs:complexType>   \n    <xs:simpleType name=\"RsnCdType\">\n        <xs:restriction base=\"xs:string\">\n            <xs:pattern value=\"[A-Z]{2}[0-9]{3}\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"StatusType\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"OK\"/>\n            <xs:enumeration value=\"NOTOK\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"CodeType\">\n        <xs:restriction base=\"xs:string\">\n            <xs:pattern value=\"[0-9]{3}\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"DocumentType\">\n        <xs:sequence>\n\t      \t<xs:element name=\"ResponseHdr\" type=\"ResponseHdrType\"/>\n\t      \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ResponseBody\" type=\"ResponseBodyType\"/>\n        </xs:sequence>\n    </xs:complexType>\n</xs:schema>\n"
}
]
}
],
"http://a.ml/vocabularies/document#version": [
{
"@value": "2.0.0"
}
]
},
{
"@id": "amf://id#21",
"@type": [
"http://a.ml/vocabularies/document#ExternalFragment",
"http://a.ml/vocabularies/document#Fragment",
"http://a.ml/vocabularies/document#Unit"
],
"http://a.ml/vocabularies/document#encodes": [
{
"@id": "amf://id#22",
"@type": [
"http://a.ml/vocabularies/document#ExternalDomainElement",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Document xmlns=\"urn:pil:bespoke.response\">\n\t<ResponseHdr>  \n\t\t<Status>NOTOK</Status> \t\n\t\t<OrgnlMsgId>ORGNLMSGID001</OrgnlMsgId> \n\t\t<Code>403</Code> \n\t\t<CodeDescription>Request Not Allowed / Forbidden</CodeDescription>\n    <AddtlInf>Actual Error Message</AddtlInf>\n\t</ResponseHdr>\n</Document>"
}
]
}
],
"http://a.ml/vocabularies/document#version": [
{
"@value": "2.0.0"
}
]
},
{
"@id": "amf://id#23",
"@type": [
"http://a.ml/vocabularies/document#ExternalFragment",
"http://a.ml/vocabularies/document#Fragment",
"http://a.ml/vocabularies/document#Unit"
],
"http://a.ml/vocabularies/document#encodes": [
{
"@id": "amf://id#24",
"@type": [
"http://a.ml/vocabularies/document#ExternalDomainElement",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Document xmlns=\"urn:pil:bespoke.response\">\n\t<ResponseHdr>  \n\t\t<Status>NOTOK</Status> \t\n\t\t<OrgnlMsgId>ORGNLMSGID001</OrgnlMsgId> \n\t\t<Code>401</Code> \n\t\t<CodeDescription>Invalid User Credentials Provided</CodeDescription>\n    <AddtlInf>Actual Error Message</AddtlInf>\n\t</ResponseHdr>\n</Document>"
}
]
}
],
"http://a.ml/vocabularies/document#version": [
{
"@value": "2.0.0"
}
]
},
{
"@id": "amf://id#25",
"@type": [
"http://a.ml/vocabularies/document#ExternalFragment",
"http://a.ml/vocabularies/document#Fragment",
"http://a.ml/vocabularies/document#Unit"
],
"http://a.ml/vocabularies/document#encodes": [
{
"@id": "amf://id#26",
"@type": [
"http://a.ml/vocabularies/document#ExternalDomainElement",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Document xmlns=\"urn:pil:bespoke.response\">\n\t<ResponseHdr>  \n\t\t<Status>NOTOK</Status> \t\n\t\t<OrgnlMsgId>ORGNLMSGID001</OrgnlMsgId> \n\t\t<Code>500</Code> \n\t\t<CodeDescription>Server is currently unresponsive</CodeDescription>\n    <AddtlInf>Actual Error Message</AddtlInf>\n\t</ResponseHdr>\n</Document>"
}
]
}
],
"http://a.ml/vocabularies/document#version": [
{
"@value": "2.0.0"
}
]
},
{
"@id": "amf://id#27",
"@type": [
"http://a.ml/vocabularies/document#ExternalFragment",
"http://a.ml/vocabularies/document#Fragment",
"http://a.ml/vocabularies/document#Unit"
],
"http://a.ml/vocabularies/document#encodes": [
{
"@id": "amf://id#28",
"@type": [
"http://a.ml/vocabularies/document#ExternalDomainElement",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Document xmlns=\"urn:iso:std:iso:20022:tech:xsd:pain.001.001.03\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n   <CstmrCdtTrfInitn>\n      <GrpHdr>\n         <MsgId>ABC/090928/CCT001</MsgId>\n         <CreDtTm>2009-09-28T14:07:00</CreDtTm>\n         <NbOfTxs>1</NbOfTxs>\n         <CtrlSum>10000000</CtrlSum>\n         <InitgPty>\n            <Nm>ABC Corporation</Nm>\n            <PstlAdr>\n               <StrtNm>Times Square</StrtNm>\n               <BldgNb>7</BldgNb>\n               <PstCd>NY 10036</PstCd>\n               <TwnNm>New York</TwnNm>\n               <Ctry>US</Ctry>\n            </PstlAdr>\n            <Id>\n\t\t\t\t      <OrgId>\n\t\t\t\t\t      <BICOrBEI>BBBBUS33</BICOrBEI>\n\t\t\t\t      </OrgId>\n            </Id>\n         </InitgPty>\n      </GrpHdr>\n      <PmtInf>\n         <PmtInfId>ABC/086</PmtInfId>\n         <PmtMtd>TRF</PmtMtd>\n         <BtchBookg>false</BtchBookg>\n         <ReqdExctnDt>2009-09-29</ReqdExctnDt>\n         <Dbtr>\n            <Nm>ABC Corporation</Nm>\n            <PstlAdr>\n               <StrtNm>Times Square</StrtNm>\n               <BldgNb>7</BldgNb>\n               <PstCd>NY 10036</PstCd>\n               <TwnNm>New York</TwnNm>\n               <Ctry>US</Ctry>\n            </PstlAdr>\n         </Dbtr>\n         <DbtrAcct>\n            <Id>\n               <IBAN>BE30001216371411</IBAN>\n            </Id>\n         </DbtrAcct>\n         <DbtrAgt>\n            <FinInstnId>\n               <BIC>BBBBUS33</BIC>\n            </FinInstnId>\n         </DbtrAgt>\n         <CdtTrfTxInf>\n            <PmtId>\n               <EndToEndId>ABC/4562/2009-09-08</EndToEndId>\n            </PmtId>\n\t\t\t      <PmtTpInf>\n\t\t\t\t      <LclInstrm>\n\t\t\t\t\t      <Cd>INST</Cd>\n\t\t\t\t      </LclInstrm>\n\t\t\t      </PmtTpInf>\n            <Amt>\n               <InstdAmt Ccy=\"EUR\">10000000</InstdAmt>\n            </Amt>\n            <ChrgBr>SHAR</ChrgBr>\n            <CdtrAgt>\n               <FinInstnId>\n                  <BIC>AAAAGB2L</BIC>\n               </FinInstnId>\n            </CdtrAgt>\n            <Cdtr>\n               <Nm>DEF Electronics</Nm>\n               <PstlAdr>\n                  <AdrLine>Corn Exchange 5th Floor</AdrLine>\n                  <AdrLine>Mark Lane 55</AdrLine>\n                  <AdrLine>EC3R7NE London</AdrLine>\n                  <AdrLine>GB</AdrLine>\n               </PstlAdr>\n            </Cdtr>\n            <CdtrAcct>\n               <Id>\n                  <IBAN>BE30001216371411</IBAN>\n               </Id>\n            </CdtrAcct>\n            <Purp>\n               <Cd>CINV</Cd>\n            </Purp>\n            <RmtInf>\n               <Strd>\n                  <RfrdDocInf>\n                     <Nb>4562</Nb>\n                     <RltdDt>2009-09-08</RltdDt>\n                  </RfrdDocInf>\n               </Strd>\n            </RmtInf>\n         </CdtTrfTxInf>\n      </PmtInf>\n   </CstmrCdtTrfInitn>\n</Document>"
}
]
}
],
"http://a.ml/vocabularies/document#version": [
{
"@value": "2.0.0"
}
]
},
{
"@id": "amf://id#29",
"@type": [
"http://a.ml/vocabularies/document#ExternalFragment",
"http://a.ml/vocabularies/document#Fragment",
"http://a.ml/vocabularies/document#Unit"
],
"http://a.ml/vocabularies/document#encodes": [
{
"@id": "amf://id#30",
"@type": [
"http://a.ml/vocabularies/document#ExternalDomainElement",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Document xmlns=\"urn:pil:bespoke.response\">\n    <ResponseHdr>  \n        <Status>NOTOK</Status> \t\n        <OrgnlMsgId>ORGNLMSGID001</OrgnlMsgId> \n        <Code>415</Code> \n        <CodeDescription>Unsupported Media Type</CodeDescription>\n        <AddtlInf>Actual Error Message</AddtlInf>\n    </ResponseHdr>\n</Document>"
}
]
}
],
"http://a.ml/vocabularies/document#version": [
{
"@value": "2.0.0"
}
]
}
],
"http://a.ml/vocabularies/document#declares": [
{
"@id": "amf://id#31",
"@type": [
"http://a.ml/vocabularies/shapes#SchemaShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#mediaType": [
{
"@value": "application/xml"
}
],
"http://www.w3.org/ns/shacl#name": [
{
"@value": "pain00100103-schema"
}
],
"http://a.ml/vocabularies/apiContract#examples": [
{
"@id": "amf://id#32",
"@type": [
"http://a.ml/vocabularies/apiContract#Example",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/document#strict": [
{
"@value": true
}
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Document xmlns=\"urn:iso:std:iso:20022:tech:xsd:pain.001.001.03\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n   <CstmrCdtTrfInitn>\n      <GrpHdr>\n         <MsgId>ABC/090928/CCT001</MsgId>\n         <CreDtTm>2009-09-28T14:07:00</CreDtTm>\n         <NbOfTxs>1</NbOfTxs>\n         <CtrlSum>10000000</CtrlSum>\n         <InitgPty>\n            <Nm>ABC Corporation</Nm>\n            <PstlAdr>\n               <StrtNm>Times Square</StrtNm>\n               <BldgNb>7</BldgNb>\n               <PstCd>NY 10036</PstCd>\n               <TwnNm>New York</TwnNm>\n               <Ctry>US</Ctry>\n            </PstlAdr>\n            <Id>\n\t\t\t\t      <OrgId>\n\t\t\t\t\t      <BICOrBEI>BBBBUS33</BICOrBEI>\n\t\t\t\t      </OrgId>\n            </Id>\n         </InitgPty>\n      </GrpHdr>\n      <PmtInf>\n         <PmtInfId>ABC/086</PmtInfId>\n         <PmtMtd>TRF</PmtMtd>\n         <BtchBookg>false</BtchBookg>\n         <ReqdExctnDt>2009-09-29</ReqdExctnDt>\n         <Dbtr>\n            <Nm>ABC Corporation</Nm>\n            <PstlAdr>\n               <StrtNm>Times Square</StrtNm>\n               <BldgNb>7</BldgNb>\n               <PstCd>NY 10036</PstCd>\n               <TwnNm>New York</TwnNm>\n               <Ctry>US</Ctry>\n            </PstlAdr>\n         </Dbtr>\n         <DbtrAcct>\n            <Id>\n               <IBAN>BE30001216371411</IBAN>\n            </Id>\n         </DbtrAcct>\n         <DbtrAgt>\n            <FinInstnId>\n               <BIC>BBBBUS33</BIC>\n            </FinInstnId>\n         </DbtrAgt>\n         <CdtTrfTxInf>\n            <PmtId>\n               <EndToEndId>ABC/4562/2009-09-08</EndToEndId>\n            </PmtId>\n\t\t\t      <PmtTpInf>\n\t\t\t\t      <LclInstrm>\n\t\t\t\t\t      <Cd>INST</Cd>\n\t\t\t\t      </LclInstrm>\n\t\t\t      </PmtTpInf>\n            <Amt>\n               <InstdAmt Ccy=\"EUR\">10000000</InstdAmt>\n            </Amt>\n            <ChrgBr>SHAR</ChrgBr>\n            <CdtrAgt>\n               <FinInstnId>\n                  <BIC>AAAAGB2L</BIC>\n               </FinInstnId>\n            </CdtrAgt>\n            <Cdtr>\n               <Nm>DEF Electronics</Nm>\n               <PstlAdr>\n                  <AdrLine>Corn Exchange 5th Floor</AdrLine>\n                  <AdrLine>Mark Lane 55</AdrLine>\n                  <AdrLine>EC3R7NE London</AdrLine>\n                  <AdrLine>GB</AdrLine>\n               </PstlAdr>\n            </Cdtr>\n            <CdtrAcct>\n               <Id>\n                  <IBAN>BE30001216371411</IBAN>\n               </Id>\n            </CdtrAcct>\n            <Purp>\n               <Cd>CINV</Cd>\n            </Purp>\n            <RmtInf>\n               <Strd>\n                  <RfrdDocInf>\n                     <Nb>4562</Nb>\n                     <RltdDt>2009-09-08</RltdDt>\n                  </RfrdDocInf>\n               </Strd>\n            </RmtInf>\n         </CdtTrfTxInf>\n      </PmtInf>\n   </CstmrCdtTrfInitn>\n</Document>"
}
],
"http://a.ml/vocabularies/document#location": [
{
"@value": "file://demo/SE-13559/examples/pain00100103-example.xml"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#32/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#synthesized-field": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#strict"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "true"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#raw"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(1,0)-(1,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#32"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(25,17)-(25,59)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#local-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#32"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": ""
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#tracked-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#32"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "amf://id#33"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!--Generated by SWIFTStandards Workstation (build:R6.1.0.2) on 2009 Jan 08 17:30:53-->\n<xs:schema xmlns=\"urn:iso:std:iso:20022:tech:xsd:pain.001.001.03\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" targetNamespace=\"urn:iso:std:iso:20022:tech:xsd:pain.001.001.03\">\n    <xs:element name=\"Document\" type=\"Document\"/>\n    <xs:complexType name=\"AccountIdentification4Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"IBAN\" type=\"IBAN2007Identifier\"/>\n                <xs:element name=\"Othr\" type=\"GenericAccountIdentification1\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"AccountSchemeName1Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"ExternalAccountIdentification1Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"ActiveOrHistoricCurrencyAndAmount_SimpleType\">\n        <xs:restriction base=\"xs:decimal\">\n            <xs:minInclusive value=\"0\"/>\n            <xs:fractionDigits value=\"5\"/>\n            <xs:totalDigits value=\"18\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"ActiveOrHistoricCurrencyAndAmount\">\n        <xs:simpleContent>\n            <xs:extension base=\"ActiveOrHistoricCurrencyAndAmount_SimpleType\">\n                <xs:attribute name=\"Ccy\" type=\"ActiveOrHistoricCurrencyCode\" use=\"required\"/>\n            </xs:extension>\n        </xs:simpleContent>\n    </xs:complexType>\n    <xs:simpleType name=\"ActiveOrHistoricCurrencyCode\">\n        <xs:restriction base=\"xs:string\">\n            <xs:pattern value=\"[A-Z]{3,3}\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"AddressType2Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"ADDR\"/>\n            <xs:enumeration value=\"PBOX\"/>\n            <xs:enumeration value=\"HOME\"/>\n            <xs:enumeration value=\"BIZZ\"/>\n            <xs:enumeration value=\"MLTO\"/>\n            <xs:enumeration value=\"DLVY\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"AmountType3Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"InstdAmt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n                <xs:element name=\"EqvtAmt\" type=\"EquivalentAmount2\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"AnyBICIdentifier\">\n        <xs:restriction base=\"xs:string\">\n            <xs:pattern value=\"[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"Authorisation1Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"Authorisation1Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max128Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"Authorisation1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"AUTH\"/>\n            <xs:enumeration value=\"FDET\"/>\n            <xs:enumeration value=\"FSUM\"/>\n            <xs:enumeration value=\"ILEV\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"BICIdentifier\">\n        <xs:restriction base=\"xs:string\">\n            <xs:pattern value=\"[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"BaseOneRate\">\n        <xs:restriction base=\"xs:decimal\">\n            <xs:fractionDigits value=\"10\"/>\n            <xs:totalDigits value=\"11\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"BatchBookingIndicator\">\n        <xs:restriction base=\"xs:boolean\"/>\n    </xs:simpleType>\n    <xs:complexType name=\"BranchAndFinancialInstitutionIdentification4\">\n        <xs:sequence>\n            <xs:element name=\"FinInstnId\" type=\"FinancialInstitutionIdentification7\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"BrnchId\" type=\"BranchData2\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"BranchData2\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Id\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Nm\" type=\"Max140Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"PstlAdr\" type=\"PostalAddress6\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"CashAccount16\">\n        <xs:sequence>\n            <xs:element name=\"Id\" type=\"AccountIdentification4Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Tp\" type=\"CashAccountType2\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Ccy\" type=\"ActiveOrHistoricCurrencyCode\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Nm\" type=\"Max70Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"CashAccountType2\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"CashAccountType4Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"CashAccountType4Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"CASH\"/>\n            <xs:enumeration value=\"CHAR\"/>\n            <xs:enumeration value=\"COMM\"/>\n            <xs:enumeration value=\"TAXE\"/>\n            <xs:enumeration value=\"CISH\"/>\n            <xs:enumeration value=\"TRAS\"/>\n            <xs:enumeration value=\"SACC\"/>\n            <xs:enumeration value=\"CACC\"/>\n            <xs:enumeration value=\"SVGS\"/>\n            <xs:enumeration value=\"ONDP\"/>\n            <xs:enumeration value=\"MGLD\"/>\n            <xs:enumeration value=\"NREX\"/>\n            <xs:enumeration value=\"MOMA\"/>\n            <xs:enumeration value=\"LOAN\"/>\n            <xs:enumeration value=\"SLRY\"/>\n            <xs:enumeration value=\"ODFT\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"CategoryPurpose1Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"ExternalCategoryPurpose1Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"ChargeBearerType1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"DEBT\"/>\n            <xs:enumeration value=\"CRED\"/>\n            <xs:enumeration value=\"SHAR\"/>\n            <xs:enumeration value=\"SLEV\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"Cheque6\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ChqTp\" type=\"ChequeType2Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ChqNb\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ChqFr\" type=\"NameAndAddress10\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"DlvryMtd\" type=\"ChequeDeliveryMethod1Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"DlvrTo\" type=\"NameAndAddress10\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"InstrPrty\" type=\"Priority2Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ChqMtrtyDt\" type=\"ISODate\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"FrmsCd\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"2\" minOccurs=\"0\" name=\"MemoFld\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RgnlClrZone\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"PrtLctn\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"ChequeDelivery1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"MLDB\"/>\n            <xs:enumeration value=\"MLCD\"/>\n            <xs:enumeration value=\"MLFA\"/>\n            <xs:enumeration value=\"CRDB\"/>\n            <xs:enumeration value=\"CRCD\"/>\n            <xs:enumeration value=\"CRFA\"/>\n            <xs:enumeration value=\"PUDB\"/>\n            <xs:enumeration value=\"PUCD\"/>\n            <xs:enumeration value=\"PUFA\"/>\n            <xs:enumeration value=\"RGDB\"/>\n            <xs:enumeration value=\"RGCD\"/>\n            <xs:enumeration value=\"RGFA\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"ChequeDeliveryMethod1Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"ChequeDelivery1Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"ChequeType2Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"CCHQ\"/>\n            <xs:enumeration value=\"CCCH\"/>\n            <xs:enumeration value=\"BCHQ\"/>\n            <xs:enumeration value=\"DRFT\"/>\n            <xs:enumeration value=\"ELDR\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"ClearingSystemIdentification2Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"ExternalClearingSystemIdentification1Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"ClearingSystemMemberIdentification2\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ClrSysId\" type=\"ClearingSystemIdentification2Choice\"/>\n            <xs:element name=\"MmbId\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"ContactDetails2\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"NmPrfx\" type=\"NamePrefix1Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Nm\" type=\"Max140Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"PhneNb\" type=\"PhoneNumber\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"MobNb\" type=\"PhoneNumber\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"FaxNb\" type=\"PhoneNumber\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"EmailAdr\" type=\"Max2048Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Othr\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"CountryCode\">\n        <xs:restriction base=\"xs:string\">\n            <xs:pattern value=\"[A-Z]{2,2}\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"CreditDebitCode\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"CRDT\"/>\n            <xs:enumeration value=\"DBIT\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"CreditTransferTransactionInformation10\">\n        <xs:sequence>\n            <xs:element name=\"PmtId\" type=\"PaymentIdentification1\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"PmtTpInf\" type=\"PaymentTypeInformation19\"/>\n            <xs:element name=\"Amt\" type=\"AmountType3Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"XchgRateInf\" type=\"ExchangeRateInformation1\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ChrgBr\" type=\"ChargeBearerType1Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ChqInstr\" type=\"Cheque6\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"UltmtDbtr\" type=\"PartyIdentification32\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"IntrmyAgt1\" type=\"BranchAndFinancialInstitutionIdentification4\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"IntrmyAgt1Acct\" type=\"CashAccount16\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"IntrmyAgt2\" type=\"BranchAndFinancialInstitutionIdentification4\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"IntrmyAgt2Acct\" type=\"CashAccount16\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"IntrmyAgt3\" type=\"BranchAndFinancialInstitutionIdentification4\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"IntrmyAgt3Acct\" type=\"CashAccount16\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CdtrAgt\" type=\"BranchAndFinancialInstitutionIdentification4\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CdtrAgtAcct\" type=\"CashAccount16\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Cdtr\" type=\"PartyIdentification32\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CdtrAcct\" type=\"CashAccount16\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"UltmtCdtr\" type=\"PartyIdentification32\"/>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"InstrForCdtrAgt\" type=\"InstructionForCreditorAgent1\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"InstrForDbtrAgt\" type=\"Max140Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Purp\" type=\"Purpose2Choice\"/>\n            <xs:element maxOccurs=\"10\" minOccurs=\"0\" name=\"RgltryRptg\" type=\"RegulatoryReporting3\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Tax\" type=\"TaxInformation3\"/>\n            <xs:element maxOccurs=\"10\" minOccurs=\"0\" name=\"RltdRmtInf\" type=\"RemittanceLocation2\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RmtInf\" type=\"RemittanceInformation5\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"CreditorReferenceInformation2\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Tp\" type=\"CreditorReferenceType2\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Ref\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"CreditorReferenceType1Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"DocumentType3Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"CreditorReferenceType2\">\n        <xs:sequence>\n            <xs:element name=\"CdOrPrtry\" type=\"CreditorReferenceType1Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Issr\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"CustomerCreditTransferInitiationV03\">\n        <xs:sequence>\n            <xs:element name=\"GrpHdr\" type=\"GroupHeader32\"/>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"1\" name=\"PmtInf\" type=\"PaymentInstructionInformation3\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"DateAndPlaceOfBirth\">\n        <xs:sequence>\n            <xs:element name=\"BirthDt\" type=\"ISODate\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"PrvcOfBirth\" type=\"Max35Text\"/>\n            <xs:element name=\"CityOfBirth\" type=\"Max35Text\"/>\n            <xs:element name=\"CtryOfBirth\" type=\"CountryCode\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"DatePeriodDetails\">\n        <xs:sequence>\n            <xs:element name=\"FrDt\" type=\"ISODate\"/>\n            <xs:element name=\"ToDt\" type=\"ISODate\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"DecimalNumber\">\n        <xs:restriction base=\"xs:decimal\">\n            <xs:fractionDigits value=\"17\"/>\n            <xs:totalDigits value=\"18\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"Document\">\n        <xs:sequence>\n            <xs:element name=\"CstmrCdtTrfInitn\" type=\"CustomerCreditTransferInitiationV03\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"DocumentAdjustment1\">\n        <xs:sequence>\n            <xs:element name=\"Amt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CdtDbtInd\" type=\"CreditDebitCode\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Rsn\" type=\"Max4Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"AddtlInf\" type=\"Max140Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"DocumentType3Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"RADM\"/>\n            <xs:enumeration value=\"RPIN\"/>\n            <xs:enumeration value=\"FXDR\"/>\n            <xs:enumeration value=\"DISP\"/>\n            <xs:enumeration value=\"PUOR\"/>\n            <xs:enumeration value=\"SCOR\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"DocumentType5Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"MSIN\"/>\n            <xs:enumeration value=\"CNFA\"/>\n            <xs:enumeration value=\"DNFA\"/>\n            <xs:enumeration value=\"CINV\"/>\n            <xs:enumeration value=\"CREN\"/>\n            <xs:enumeration value=\"DEBN\"/>\n            <xs:enumeration value=\"HIRI\"/>\n            <xs:enumeration value=\"SBIN\"/>\n            <xs:enumeration value=\"CMCN\"/>\n            <xs:enumeration value=\"SOAC\"/>\n            <xs:enumeration value=\"DISP\"/>\n            <xs:enumeration value=\"BOLD\"/>\n            <xs:enumeration value=\"VCHR\"/>\n            <xs:enumeration value=\"AROI\"/>\n            <xs:enumeration value=\"TSUT\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"EquivalentAmount2\">\n        <xs:sequence>\n            <xs:element name=\"Amt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n            <xs:element name=\"CcyOfTrf\" type=\"ActiveOrHistoricCurrencyCode\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"ExchangeRateInformation1\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"XchgRate\" type=\"BaseOneRate\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RateTp\" type=\"ExchangeRateType1Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CtrctId\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"ExchangeRateType1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"SPOT\"/>\n            <xs:enumeration value=\"SALE\"/>\n            <xs:enumeration value=\"AGRD\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"ExternalAccountIdentification1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"4\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"ExternalCategoryPurpose1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"4\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"ExternalClearingSystemIdentification1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"5\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"ExternalFinancialInstitutionIdentification1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"4\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"ExternalLocalInstrument1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"35\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"ExternalOrganisationIdentification1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"4\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"ExternalPersonIdentification1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"4\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"ExternalPurpose1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"4\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"ExternalServiceLevel1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"4\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"FinancialIdentificationSchemeName1Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"ExternalFinancialInstitutionIdentification1Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"FinancialInstitutionIdentification7\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"BIC\" type=\"BICIdentifier\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ClrSysMmbId\" type=\"ClearingSystemMemberIdentification2\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Nm\" type=\"Max140Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"PstlAdr\" type=\"PostalAddress6\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Othr\" type=\"GenericFinancialIdentification1\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"GenericAccountIdentification1\">\n        <xs:sequence>\n            <xs:element name=\"Id\" type=\"Max34Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"SchmeNm\" type=\"AccountSchemeName1Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Issr\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"GenericFinancialIdentification1\">\n        <xs:sequence>\n            <xs:element name=\"Id\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"SchmeNm\" type=\"FinancialIdentificationSchemeName1Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Issr\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"GenericOrganisationIdentification1\">\n        <xs:sequence>\n            <xs:element name=\"Id\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"SchmeNm\" type=\"OrganisationIdentificationSchemeName1Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Issr\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"GenericPersonIdentification1\">\n        <xs:sequence>\n            <xs:element name=\"Id\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"SchmeNm\" type=\"PersonIdentificationSchemeName1Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Issr\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"GroupHeader32\">\n        <xs:sequence>\n            <xs:element name=\"MsgId\" type=\"Max35Text\"/>\n            <xs:element name=\"CreDtTm\" type=\"ISODateTime\"/>\n            <xs:element maxOccurs=\"2\" minOccurs=\"0\" name=\"Authstn\" type=\"Authorisation1Choice\"/>\n            <xs:element name=\"NbOfTxs\" type=\"Max15NumericText\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CtrlSum\" type=\"DecimalNumber\"/>\n            <xs:element name=\"InitgPty\" type=\"PartyIdentification32\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"FwdgAgt\" type=\"BranchAndFinancialInstitutionIdentification4\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"IBAN2007Identifier\">\n        <xs:restriction base=\"xs:string\">\n            <xs:pattern value=\"[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"ISODate\">\n        <xs:restriction base=\"xs:date\"/>\n    </xs:simpleType>\n    <xs:simpleType name=\"ISODateTime\">\n        <xs:restriction base=\"xs:dateTime\"/>\n    </xs:simpleType>\n    <xs:simpleType name=\"Instruction3Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"CHQB\"/>\n            <xs:enumeration value=\"HOLD\"/>\n            <xs:enumeration value=\"PHOB\"/>\n            <xs:enumeration value=\"TELB\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"InstructionForCreditorAgent1\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Cd\" type=\"Instruction3Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"InstrInf\" type=\"Max140Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"LocalInstrument2Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"ExternalLocalInstrument1Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"Max10Text\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"10\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"Max128Text\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"128\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"Max140Text\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"140\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"Max15NumericText\">\n        <xs:restriction base=\"xs:string\">\n            <xs:pattern value=\"[0-9]{1,15}\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"Max16Text\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"16\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"Max2048Text\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"2048\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"Max34Text\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"34\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"Max35Text\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"35\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"Max4Text\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"4\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"Max70Text\">\n        <xs:restriction base=\"xs:string\">\n            <xs:minLength value=\"1\"/>\n            <xs:maxLength value=\"70\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"NameAndAddress10\">\n        <xs:sequence>\n            <xs:element name=\"Nm\" type=\"Max140Text\"/>\n            <xs:element name=\"Adr\" type=\"PostalAddress6\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"NamePrefix1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"DOCT\"/>\n            <xs:enumeration value=\"MIST\"/>\n            <xs:enumeration value=\"MISS\"/>\n            <xs:enumeration value=\"MADM\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"Number\">\n        <xs:restriction base=\"xs:decimal\">\n            <xs:fractionDigits value=\"0\"/>\n            <xs:totalDigits value=\"18\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"OrganisationIdentification4\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"BICOrBEI\" type=\"AnyBICIdentifier\"/>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Othr\" type=\"GenericOrganisationIdentification1\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"OrganisationIdentificationSchemeName1Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"ExternalOrganisationIdentification1Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"Party6Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"OrgId\" type=\"OrganisationIdentification4\"/>\n                <xs:element name=\"PrvtId\" type=\"PersonIdentification5\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"PartyIdentification32\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Nm\" type=\"Max140Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"PstlAdr\" type=\"PostalAddress6\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Id\" type=\"Party6Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CtryOfRes\" type=\"CountryCode\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CtctDtls\" type=\"ContactDetails2\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"PaymentIdentification1\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"InstrId\" type=\"Max35Text\"/>\n            <xs:element name=\"EndToEndId\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"PaymentInstructionInformation3\">\n        <xs:sequence>\n            <xs:element name=\"PmtInfId\" type=\"Max35Text\"/>\n            <xs:element name=\"PmtMtd\" type=\"PaymentMethod3Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"BtchBookg\" type=\"BatchBookingIndicator\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"NbOfTxs\" type=\"Max15NumericText\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CtrlSum\" type=\"DecimalNumber\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"PmtTpInf\" type=\"PaymentTypeInformation19\"/>\n            <xs:element name=\"ReqdExctnDt\" type=\"ISODate\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"PoolgAdjstmntDt\" type=\"ISODate\"/>\n            <xs:element name=\"Dbtr\" type=\"PartyIdentification32\"/>\n            <xs:element name=\"DbtrAcct\" type=\"CashAccount16\"/>\n            <xs:element name=\"DbtrAgt\" type=\"BranchAndFinancialInstitutionIdentification4\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"DbtrAgtAcct\" type=\"CashAccount16\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"UltmtDbtr\" type=\"PartyIdentification32\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ChrgBr\" type=\"ChargeBearerType1Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ChrgsAcct\" type=\"CashAccount16\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ChrgsAcctAgt\" type=\"BranchAndFinancialInstitutionIdentification4\"/>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"1\" name=\"CdtTrfTxInf\" type=\"CreditTransferTransactionInformation10\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"PaymentMethod3Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"CHK\"/>\n            <xs:enumeration value=\"TRF\"/>\n            <xs:enumeration value=\"TRA\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"PaymentTypeInformation19\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"InstrPrty\" type=\"Priority2Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"SvcLvl\" type=\"ServiceLevel8Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"LclInstrm\" type=\"LocalInstrument2Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CtgyPurp\" type=\"CategoryPurpose1Choice\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"PercentageRate\">\n        <xs:restriction base=\"xs:decimal\">\n            <xs:fractionDigits value=\"10\"/>\n            <xs:totalDigits value=\"11\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"PersonIdentification5\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"DtAndPlcOfBirth\" type=\"DateAndPlaceOfBirth\"/>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Othr\" type=\"GenericPersonIdentification1\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"PersonIdentificationSchemeName1Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"ExternalPersonIdentification1Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"PhoneNumber\">\n        <xs:restriction base=\"xs:string\">\n            <xs:pattern value=\"\\+[0-9]{1,3}-[0-9()+\\-]{1,30}\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"PostalAddress6\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"AdrTp\" type=\"AddressType2Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Dept\" type=\"Max70Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"SubDept\" type=\"Max70Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"StrtNm\" type=\"Max70Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"BldgNb\" type=\"Max16Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"PstCd\" type=\"Max16Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"TwnNm\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CtrySubDvsn\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Ctry\" type=\"CountryCode\"/>\n            <xs:element maxOccurs=\"7\" minOccurs=\"0\" name=\"AdrLine\" type=\"Max70Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"Priority2Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"HIGH\"/>\n            <xs:enumeration value=\"NORM\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"Purpose2Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"ExternalPurpose1Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"ReferredDocumentInformation3\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Tp\" type=\"ReferredDocumentType2\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Nb\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RltdDt\" type=\"ISODate\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"ReferredDocumentType1Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"DocumentType5Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"ReferredDocumentType2\">\n        <xs:sequence>\n            <xs:element name=\"CdOrPrtry\" type=\"ReferredDocumentType1Choice\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Issr\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"RegulatoryAuthority2\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Nm\" type=\"Max140Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Ctry\" type=\"CountryCode\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"RegulatoryReporting3\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"DbtCdtRptgInd\" type=\"RegulatoryReportingType1Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Authrty\" type=\"RegulatoryAuthority2\"/>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Dtls\" type=\"StructuredRegulatoryReporting3\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"RegulatoryReportingType1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"CRED\"/>\n            <xs:enumeration value=\"DEBT\"/>\n            <xs:enumeration value=\"BOTH\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"RemittanceAmount1\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"DuePyblAmt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"DscntApldAmt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CdtNoteAmt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"TaxAmt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"AdjstmntAmtAndRsn\" type=\"DocumentAdjustment1\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RmtdAmt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"RemittanceInformation5\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Ustrd\" type=\"Max140Text\"/>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Strd\" type=\"StructuredRemittanceInformation7\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"RemittanceLocation2\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RmtId\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RmtLctnMtd\" type=\"RemittanceLocationMethod2Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RmtLctnElctrncAdr\" type=\"Max2048Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RmtLctnPstlAdr\" type=\"NameAndAddress10\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"RemittanceLocationMethod2Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"FAXI\"/>\n            <xs:enumeration value=\"EDIC\"/>\n            <xs:enumeration value=\"URID\"/>\n            <xs:enumeration value=\"EMAL\"/>\n            <xs:enumeration value=\"POST\"/>\n            <xs:enumeration value=\"SMSM\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"ServiceLevel8Choice\">\n        <xs:sequence>\n            <xs:choice>\n                <xs:element name=\"Cd\" type=\"ExternalServiceLevel1Code\"/>\n                <xs:element name=\"Prtry\" type=\"Max35Text\"/>\n            </xs:choice>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"StructuredRegulatoryReporting3\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Tp\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Dt\" type=\"ISODate\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Ctry\" type=\"CountryCode\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Cd\" type=\"Max10Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Amt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Inf\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"StructuredRemittanceInformation7\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"RfrdDocInf\" type=\"ReferredDocumentInformation3\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RfrdDocAmt\" type=\"RemittanceAmount1\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CdtrRefInf\" type=\"CreditorReferenceInformation2\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Invcr\" type=\"PartyIdentification32\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Invcee\" type=\"PartyIdentification32\"/>\n            <xs:element maxOccurs=\"3\" minOccurs=\"0\" name=\"AddtlRmtInf\" type=\"Max140Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"TaxAmount1\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Rate\" type=\"PercentageRate\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"TaxblBaseAmt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"TtlAmt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Dtls\" type=\"TaxRecordDetails1\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"TaxAuthorisation1\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Titl\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Nm\" type=\"Max140Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"TaxInformation3\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Cdtr\" type=\"TaxParty1\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Dbtr\" type=\"TaxParty2\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"AdmstnZn\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RefNb\" type=\"Max140Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Mtd\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"TtlTaxblBaseAmt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"TtlTaxAmt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Dt\" type=\"ISODate\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"SeqNb\" type=\"Number\"/>\n            <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Rcrd\" type=\"TaxRecord1\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"TaxParty1\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"TaxId\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RegnId\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"TaxTp\" type=\"Max35Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"TaxParty2\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"TaxId\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RegnId\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"TaxTp\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Authstn\" type=\"TaxAuthorisation1\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"TaxPeriod1\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Yr\" type=\"ISODate\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Tp\" type=\"TaxRecordPeriod1Code\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"FrToDt\" type=\"DatePeriodDetails\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"TaxRecord1\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Tp\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Ctgy\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CtgyDtls\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"DbtrSts\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CertId\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"FrmsCd\" type=\"Max35Text\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Prd\" type=\"TaxPeriod1\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"TaxAmt\" type=\"TaxAmount1\"/>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"AddtlInf\" type=\"Max140Text\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"TaxRecordDetails1\">\n        <xs:sequence>\n            <xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Prd\" type=\"TaxPeriod1\"/>\n            <xs:element name=\"Amt\" type=\"ActiveOrHistoricCurrencyAndAmount\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=\"TaxRecordPeriod1Code\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"MM01\"/>\n            <xs:enumeration value=\"MM02\"/>\n            <xs:enumeration value=\"MM03\"/>\n            <xs:enumeration value=\"MM04\"/>\n            <xs:enumeration value=\"MM05\"/>\n            <xs:enumeration value=\"MM06\"/>\n            <xs:enumeration value=\"MM07\"/>\n            <xs:enumeration value=\"MM08\"/>\n            <xs:enumeration value=\"MM09\"/>\n            <xs:enumeration value=\"MM10\"/>\n            <xs:enumeration value=\"MM11\"/>\n            <xs:enumeration value=\"MM12\"/>\n            <xs:enumeration value=\"QTR1\"/>\n            <xs:enumeration value=\"QTR2\"/>\n            <xs:enumeration value=\"QTR3\"/>\n            <xs:enumeration value=\"QTR4\"/>\n            <xs:enumeration value=\"HLF1\"/>\n            <xs:enumeration value=\"HLF2\"/>\n        </xs:restriction>\n    </xs:simpleType>\n</xs:schema>\n"
}
],
"http://a.ml/vocabularies/document#location": [
{
"@value": "file://demo/SE-13559/schemas/pain00100103.xsd"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#31/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#declared-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#31"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": ""
}
]
}
]
}
]
},
{
"@id": "amf://id#34",
"@type": [
"http://a.ml/vocabularies/shapes#SchemaShape",
"http://a.ml/vocabularies/shapes#AnyShape",
"http://www.w3.org/ns/shacl#Shape",
"http://a.ml/vocabularies/shapes#Shape",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#mediaType": [
{
"@value": "application/xml"
}
],
"http://www.w3.org/ns/shacl#name": [
{
"@value": "response-schema"
}
],
"http://a.ml/vocabularies/apiContract#examples": [
{
"@id": "amf://id#35",
"@type": [
"http://a.ml/vocabularies/apiContract#Example",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "example_0"
}
],
"http://a.ml/vocabularies/document#strict": [
{
"@value": true
}
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Document xmlns=\"urn:pil:bespoke.response\">\n    <ResponseHdr>  \n        <Status>OK</Status> \t\n        <OrgnlMsgId>ORGNLMSGID001</OrgnlMsgId> <!--Mapped from received  payment instruction request. Xpath :  Document/CstmrCdtTrfInitn/GrpHdr/MsgId --> \n        <Code>200</Code> \n    </ResponseHdr>\n    <ResponseBody>  \n        <ResponseInfAndSts>\n            <RsnInf> \n                <Status>PaymentInstrSubmitted</Status>\n                <RsnCd>PI001</RsnCd>   \n                <RsnCdDesc>Payment Instruction successfully Submitted</RsnCdDesc>\n                <AddtlInf>Additional Details</AddtlInf>\n            </RsnInf>\n            <ProcessorRsnInf>  \n                <ProcessorStatus>BIWAITQ</ProcessorStatus> <!--Mapped from <P_MSG_STS> -->\n            </ProcessorRsnInf>\n        </ResponseInfAndSts>\n    </ResponseBody>\n</Document>"
}
],
"http://a.ml/vocabularies/document#location": [
{
"@value": "file://demo/SE-13559/examples/success-example.xml"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#35/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#synthesized-field": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#strict"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "true"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#raw"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(1,0)-(1,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#35"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(32,21)-(32,58)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#local-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#35"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": ""
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#tracked-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#35"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "amf://id#36"
}
]
}
]
}
]
},
{
"@id": "amf://id#37",
"@type": [
"http://a.ml/vocabularies/apiContract#Example",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "example_1"
}
],
"http://a.ml/vocabularies/document#strict": [
{
"@value": true
}
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Document xmlns=\"urn:pil:bespoke.response\">\n\t<ResponseHdr>  \n\t\t<Status>OK</Status> \t\n\t\t<OrgnlMsgId>ORGNLMSGID001</OrgnlMsgId>\n\t\t<Code>202</Code>\n\t</ResponseHdr>\n\t<ResponseBody>  \n\t<ResponseInfAndSts>\n\t\t<RsnInf> \n\t\t\t<Status>PaymentReceived</Status>\n\t\t\t<RsnCd>PI001</RsnCd>   \n\t\t\t<RsnCdDesc>Payment Instruction successfully submitted and status is Received</RsnCdDesc>\n\t\t</RsnInf>\n\t</ResponseInfAndSts>\n\t</ResponseBody>\n</Document>"
}
],
"http://a.ml/vocabularies/document#location": [
{
"@value": "file://demo/SE-13559/sepa-processor-error-examples/success-example-PI001.xml"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#37/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#synthesized-field": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#strict"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "true"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#raw"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(1,0)-(1,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#37"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(39,21)-(39,85)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#local-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#37"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": ""
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#tracked-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#37"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "amf://id#38"
}
]
}
]
}
]
},
{
"@id": "amf://id#39",
"@type": [
"http://a.ml/vocabularies/apiContract#Example",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "example_2"
}
],
"http://a.ml/vocabularies/document#strict": [
{
"@value": true
}
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Document xmlns=\"urn:pil:bespoke.response\">\n\t<ResponseHdr>  \n\t\t<Status>NOTOK</Status> \t\n\t\t<OrgnlMsgId>ORGNLMSGID001</OrgnlMsgId> \n\t\t<Code>400</Code> \n    <CodeDescription>Invalid Request Received from Channel (Schema/Header)</CodeDescription>\n    <AddtlInf>Actual Error Message</AddtlInf>\n\t</ResponseHdr>\n</Document>"
}
],
"http://a.ml/vocabularies/document#location": [
{
"@value": "file://demo/SE-13559/examples/error-example-400.xml"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#39/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#synthesized-field": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#strict"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "true"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#raw"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(1,0)-(1,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#39"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(46,21)-(46,60)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#local-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#39"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": ""
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#tracked-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#39"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "amf://id#40"
}
]
}
]
}
]
},
{
"@id": "amf://id#41",
"@type": [
"http://a.ml/vocabularies/apiContract#Example",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "example_3"
}
],
"http://a.ml/vocabularies/document#strict": [
{
"@value": true
}
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Document xmlns=\"urn:pil:bespoke.response\">\n\t<ResponseHdr>  \n\t\t<Status>NOTOK</Status> \t\n\t\t<OrgnlMsgId>ORGNLMSGID001</OrgnlMsgId> \n\t\t<Code>401</Code> \n\t\t<CodeDescription>Invalid User Credentials Provided</CodeDescription>\n    <AddtlInf>Actual Error Message</AddtlInf>\n\t</ResponseHdr>\n</Document>"
}
],
"http://a.ml/vocabularies/document#location": [
{
"@value": "file://demo/SE-13559/examples/error-example-401.xml"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#41/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#synthesized-field": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#strict"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "true"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#raw"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(1,0)-(1,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#41"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(53,21)-(53,60)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#local-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#41"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": ""
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#tracked-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#41"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "amf://id#42"
}
]
}
]
}
]
},
{
"@id": "amf://id#43",
"@type": [
"http://a.ml/vocabularies/apiContract#Example",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "example_4"
}
],
"http://a.ml/vocabularies/document#strict": [
{
"@value": true
}
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Document xmlns=\"urn:pil:bespoke.response\">\n\t<ResponseHdr>  \n\t\t<Status>NOTOK</Status> \t\n\t\t<OrgnlMsgId>ORGNLMSGID001</OrgnlMsgId> \n\t\t<Code>403</Code> \n\t\t<CodeDescription>Request Not Allowed / Forbidden</CodeDescription>\n    <AddtlInf>Actual Error Message</AddtlInf>\n\t</ResponseHdr>\n</Document>"
}
],
"http://a.ml/vocabularies/document#location": [
{
"@value": "file://demo/SE-13559/examples/error-example-403.xml"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#43/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#synthesized-field": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#strict"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "true"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#raw"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(1,0)-(1,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#43"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(60,21)-(60,60)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#local-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#43"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": ""
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#tracked-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#43"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "amf://id#44"
}
]
}
]
}
]
},
{
"@id": "amf://id#45",
"@type": [
"http://a.ml/vocabularies/apiContract#Example",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "example_5"
}
],
"http://a.ml/vocabularies/document#strict": [
{
"@value": true
}
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Document xmlns=\"urn:pil:bespoke.response\">\n\t<ResponseHdr>  \n\t\t<Status>NOTOK</Status> \t\n\t\t<OrgnlMsgId>ORGNLMSGID001</OrgnlMsgId> \n\t\t<Code>405</Code> \n\t\t<CodeDescription>Method Not Allowed</CodeDescription>\n    <AddtlInf>Actual Error Message</AddtlInf>\n\t</ResponseHdr>\n</Document>"
}
],
"http://a.ml/vocabularies/document#location": [
{
"@value": "file://demo/SE-13559/examples/error-example-405.xml"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#45/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#synthesized-field": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#strict"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "true"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#raw"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(1,0)-(1,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#45"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(67,21)-(67,60)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#local-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#45"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": ""
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#tracked-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#45"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "amf://id#46"
}
]
}
]
}
]
},
{
"@id": "amf://id#47",
"@type": [
"http://a.ml/vocabularies/apiContract#Example",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "example_6"
}
],
"http://a.ml/vocabularies/document#strict": [
{
"@value": true
}
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Document xmlns=\"urn:pil:bespoke.response\">\n\t<ResponseHdr>  \n\t\t<Status>NOTOK</Status> \t\n\t\t<OrgnlMsgId>ORGNLMSGID001</OrgnlMsgId> \n\t\t<Code>406</Code> \n  </ResponseHdr>\n\t<ResponseBody>  \n\t<ResponseInfAndSts>\n\t\t<RsnInf> \n\t\t\t<Status>Rejected</Status>\n\t\t\t<RsnCd>PL001</RsnCd>   \n\t\t\t<RsnCdDesc>Payment engine route is not determined</RsnCdDesc>\n\t\t\t<AddtlInf>Actual Error Message</AddtlInf>\n\t\t</RsnInf>\n  </ResponseInfAndSts>\n\t</ResponseBody>\n</Document>"
}
],
"http://a.ml/vocabularies/document#location": [
{
"@value": "file://demo/SE-13559/examples/error-example-406.xml"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#47/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#synthesized-field": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#strict"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "true"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#raw"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(1,0)-(1,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#47"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(75,21)-(75,60)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#local-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#47"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": ""
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#tracked-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#47"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "amf://id#48"
}
]
}
]
}
]
},
{
"@id": "amf://id#49",
"@type": [
"http://a.ml/vocabularies/apiContract#Example",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "example_7"
}
],
"http://a.ml/vocabularies/document#strict": [
{
"@value": true
}
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Document xmlns=\"urn:pil:bespoke.response\">\n    <ResponseHdr>  \n        <Status>NOTOK</Status> \t\n        <OrgnlMsgId>ORGNLMSGID001</OrgnlMsgId> \n        <Code>415</Code> \n        <CodeDescription>Unsupported Media Type</CodeDescription>\n        <AddtlInf>Actual Error Message</AddtlInf>\n    </ResponseHdr>\n</Document>"
}
],
"http://a.ml/vocabularies/document#location": [
{
"@value": "file://demo/SE-13559/examples/error-example-415.xml"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#49/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#synthesized-field": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#strict"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "true"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#raw"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(1,0)-(1,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#49"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(82,21)-(82,60)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#local-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#49"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": ""
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#tracked-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#49"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "amf://id#50"
}
]
}
]
}
]
},
{
"@id": "amf://id#51",
"@type": [
"http://a.ml/vocabularies/apiContract#Example",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "example_8"
}
],
"http://a.ml/vocabularies/document#strict": [
{
"@value": true
}
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Document xmlns=\"urn:pil:bespoke.response\">\n\t<ResponseHdr>  \n\t\t<Status>NOTOK</Status> \t\n\t\t<OrgnlMsgId>ORGNLMSGID001</OrgnlMsgId> <!--Mapped from received  payment instruction request. Xpath :  Document/CstmrCdtTrfInitn/GrpHdr/MsgId --> \n\t\t<Code>422</Code> \n\t</ResponseHdr>\n\t<ResponseBody>  \n\t<ResponseInfAndSts>\n\t\t<RsnInf> \n\t\t\t<Status>Rejected</Status>\n\t\t\t<RsnCd>PL002</RsnCd>   \n\t\t\t<RsnCdDesc>Required mandatory field is missing </RsnCdDesc>\n\t\t\t<AddtlInf>Actual Error Message</AddtlInf>\n\t\t</RsnInf>\n\t</ResponseInfAndSts>\n\t</ResponseBody>\n</Document>"
}
],
"http://a.ml/vocabularies/document#location": [
{
"@value": "file://demo/SE-13559/usrtp-processor-error-examples/error-example-422.xml"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#51/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#synthesized-field": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#strict"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "true"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#raw"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(1,0)-(1,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#51"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(89,21)-(89,82)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#local-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#51"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": ""
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#tracked-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#51"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "amf://id#52"
}
]
}
]
}
]
},
{
"@id": "amf://id#53",
"@type": [
"http://a.ml/vocabularies/apiContract#Example",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "example_9"
}
],
"http://a.ml/vocabularies/document#strict": [
{
"@value": true
}
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Document xmlns=\"urn:pil:bespoke.response\">\n\t<ResponseHdr>  \n\t\t<Status>NOTOK</Status> \t\n\t\t<OrgnlMsgId>ORGNLMSGID001</OrgnlMsgId> \n\t\t<Code>500</Code> \n\t\t<CodeDescription>Server is currently unresponsive</CodeDescription>\n    <AddtlInf>Actual Error Message</AddtlInf>\n\t</ResponseHdr>\n</Document>"
}
],
"http://a.ml/vocabularies/document#location": [
{
"@value": "file://demo/SE-13559/examples/error-example-500.xml"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#53/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#synthesized-field": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#strict"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "true"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/document#raw"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(1,0)-(1,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#53"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(96,21)-(96,60)]"
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#local-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#53"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": ""
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#tracked-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#53"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "amf://id#54"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document#raw": [
{
"@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns=\"urn:pil:bespoke.response\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" targetNamespace=\"urn:pil:bespoke.response\">\n    <xs:element name=\"Document\" type=\"DocumentType\"/>\n    <xs:complexType name=\"ResponseHdrType\">\n        <xs:sequence>\n\t      \t<xs:element name=\"Status\" type=\"StatusType\"/>\n\t      \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"OrgnlMsgId\" type=\"xs:string\"/>  <!--29/01/019 - Changed type as \"string\" and removed the Min and Max Length -->\n\t      \t<xs:element name=\"Code\" type=\"CodeType\"/>\n\t      \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"CodeDescription\" type=\"xs:string\"/> <!--29/01/019 - Changed type as \"string\" and removed the Min and Max Length -->\n\t\t  \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"AddtlInf\" type=\"xs:string\"/> <!--29/01/019 - Changed type as \"string\" and removed the Min and Max Length -->\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"RsnInfType\">\n        <xs:sequence>\n\t      \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"Status\" type=\"xs:string\"/> <!--29/01/019 - Changed type as \"string\" and removed the Min and Max Length -->\n\t      \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RsnCd\" type=\"RsnCdType\"/>\n\t      \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"RsnCdDesc\" type=\"xs:string\"/> <!--29/01/019 - Changed type as \"string\" and removed the Min and Max Length -->\n\t      \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"AddtlInf\" type=\"xs:string\"/>     <!--29/01/019 - Changed type as \"string\" and removed the Min and Max Length. Also changed the maxOccurs=\"1\" from \"10\" -->\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"ProcessorRsnInfType\">\n        <xs:sequence>\n\t      \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ProcessorStatus\" type=\"xs:string\"/> <!--29/01/019 - Changed type as \"string\" and removed the Min and Max Length -->\n\t      \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ProcessorRsnCd\" type=\"xs:string\"/> <!--29/01/019 - Changed type as \"string\" and removed the Min and Max Length -->\n\t      \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ProcessorRsnCdDesc\" type=\"xs:string\"/> <!--29/01/019 - Changed type as \"string\" and removed the Min and Max Length -->\n\t      \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ProcessorAddtlInf\" type=\"xs:string\"/> <!--29/01/019 - Changed type as \"string\" and removed the Min and Max Length -->\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"ResponseInfAndStsType\">\n        <xs:sequence>\n      \t\t<xs:element name=\"RsnInf\" type=\"RsnInfType\"/>   <!--19/11/2018 - Marked as Mandatory. removed maxOccurs=\"1\" minOccurs=\"0\"  -->\n      \t\t<xs:element maxOccurs=\"10\" minOccurs=\"0\" name=\"ProcessorRsnInf\" type=\"ProcessorRsnInfType\"/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=\"ResponseBodyType\">\n        <xs:sequence>\n      \t\t<xs:element maxOccurs=\"200\" minOccurs=\"1\" name=\"ResponseInfAndSts\" type=\"ResponseInfAndStsType\"/> <!--19/11/2018 - Marked as Mandatory. Changed minOccurs=\"1\" from \"0\" -->\n        </xs:sequence>\n     </xs:complexType>   \n    <xs:simpleType name=\"RsnCdType\">\n        <xs:restriction base=\"xs:string\">\n            <xs:pattern value=\"[A-Z]{2}[0-9]{3}\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"StatusType\">\n        <xs:restriction base=\"xs:string\">\n            <xs:enumeration value=\"OK\"/>\n            <xs:enumeration value=\"NOTOK\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=\"CodeType\">\n        <xs:restriction base=\"xs:string\">\n            <xs:pattern value=\"[0-9]{3}\"/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=\"DocumentType\">\n        <xs:sequence>\n\t      \t<xs:element name=\"ResponseHdr\" type=\"ResponseHdrType\"/>\n\t      \t<xs:element maxOccurs=\"1\" minOccurs=\"0\" name=\"ResponseBody\" type=\"ResponseBodyType\"/>\n        </xs:sequence>\n    </xs:complexType>\n</xs:schema>\n"
}
],
"http://a.ml/vocabularies/document#location": [
{
"@value": "file://demo/SE-13559/schemas/bespoke-response.xsd"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#34/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#declared-element": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#34"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": ""
}
]
}
]
}
]
},
{
"@id": "amf://id#55",
"@type": [
"http://a.ml/vocabularies/apiContract#Trait",
"http://a.ml/vocabularies/document#AbstractDeclaration",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "common-header"
}
],
"http://a.ml/vocabularies/document#dataNode": [
{
"@id": "amf://id#56",
"@type": [
"http://a.ml/vocabularies/data#Object",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#headers": [
{
"@id": "amf://id#57",
"@type": [
"http://a.ml/vocabularies/data#Object",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#X-HSBC-Source-System-Id": [
{
"@id": "amf://id#58",
"@type": [
"http://a.ml/vocabularies/data#Object",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#description": [
{
"@id": "amf://id#59",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "Uniquely identifies the Source system instance as registered in the EIM Application"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_4"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#59/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#59"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(3,17)-(3,100)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#example": [
{
"@id": "amf://id#60",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "8428866"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_5"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#60/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#60"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(4,13)-(4,22)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#type": [
{
"@id": "amf://id#61",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "string"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_6"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#61/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#61"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(5,10)-(5,16)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#minLength": [
{
"@id": "amf://id#62",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "1"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#integer"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_7"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#62/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#62"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(6,15)-(6,16)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#required": [
{
"@id": "amf://id#63",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "true"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#boolean"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_8"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#63/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#63"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(7,14)-(7,18)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "object_3"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#58/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#required"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(7,4)-(8,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#type"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(5,4)-(6,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(3,4)-(4,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#58"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(3,0)-(8,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#example"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(4,4)-(5,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#minLength"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(6,4)-(7,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#X-HSBC-SoR-CountryCode": [
{
"@id": "amf://id#64",
"@type": [
"http://a.ml/vocabularies/data#Object",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#description": [
{
"@id": "amf://id#65",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "The country of the System of Record (SoR) that the data being accessed resides in as defined by ISO 3166-1 alpha-2 codes. This is mandatory for USRTP Initiation"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_10"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#65/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#65"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(9,17)-(9,177)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#example": [
{
"@id": "amf://id#66",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "GB"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_11"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#66/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#66"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(10,13)-(10,17)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#type": [
{
"@id": "amf://id#67",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "string"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_12"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#67/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#67"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(11,10)-(11,16)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#pattern": [
{
"@id": "amf://id#68",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "^[A-Z]{2}$"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_13"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#68/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#68"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(12,13)-(12,23)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#required": [
{
"@id": "amf://id#69",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "false"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#boolean"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_14"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#69/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#69"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(13,14)-(13,19)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "object_9"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#64/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#required"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(13,4)-(14,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#type"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(11,4)-(12,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(9,4)-(10,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#64"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(9,0)-(14,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#example"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(10,4)-(11,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#pattern"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(12,4)-(13,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#X-HSBC-Session-Correlation-Id": [
{
"@id": "amf://id#70",
"@type": [
"http://a.ml/vocabularies/data#Object",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#description": [
{
"@id": "amf://id#71",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "An identifier that is connected to an authenticated session but cannot be used in itself to represent an authenticated session"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_16"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#71/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#71"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(15,17)-(15,143)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#example": [
{
"@id": "amf://id#72",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "4038af76-2531-4a00-971c-faf1be6f5f92"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_17"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#72/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#72"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(16,13)-(16,51)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#type": [
{
"@id": "amf://id#73",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "string"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_18"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#73/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#73"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(17,10)-(17,16)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#minLength": [
{
"@id": "amf://id#74",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "1"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#integer"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_19"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#74/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#74"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(18,15)-(18,16)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#required": [
{
"@id": "amf://id#75",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "true"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#boolean"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_20"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#75/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#75"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(19,14)-(19,18)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "object_15"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#70/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#required"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(19,4)-(20,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#type"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(17,4)-(18,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(15,4)-(16,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#70"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(15,0)-(20,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#example"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(16,4)-(17,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#minLength"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(18,4)-(19,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#X-HSBC-Request-Correlation-Id": [
{
"@id": "amf://id#76",
"@type": [
"http://a.ml/vocabularies/data#Object",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#description": [
{
"@id": "amf://id#77",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "Request Correlation ID to correlate all messages from user for a given request"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_22"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#77/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#77"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(21,17)-(21,95)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#example": [
{
"@id": "amf://id#78",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "2d933d80-be43-11e7-92e1-005056a61740"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_23"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#78/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#78"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(22,13)-(22,51)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#type": [
{
"@id": "amf://id#79",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "string"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_24"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#79/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#79"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(23,10)-(23,16)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#minLength": [
{
"@id": "amf://id#80",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "1"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#integer"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_25"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#80/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#80"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(24,15)-(24,16)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#required": [
{
"@id": "amf://id#81",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "true"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#boolean"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_26"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#81/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#81"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(25,14)-(25,18)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "object_21"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#76/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#required"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(25,4)-(26,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#type"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(23,4)-(24,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(21,4)-(22,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#76"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(21,0)-(26,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#example"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(22,4)-(23,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#minLength"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(24,4)-(25,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#X-HSBC-Routing-Indicator-Id": [
{
"@id": "amf://id#82",
"@type": [
"http://a.ml/vocabularies/data#Object",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#description": [
{
"@id": "amf://id#83",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "Payments Route Indicator (this will be deprecated soon)"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_28"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#83/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#83"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(27,17)-(27,72)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#example": [
{
"@id": "amf://id#84",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "USRTP"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_29"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#84/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#84"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(28,13)-(28,20)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#type": [
{
"@id": "amf://id#85",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "string"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_30"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#85/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#85"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(29,10)-(29,16)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#minLength": [
{
"@id": "amf://id#86",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "1"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#integer"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_31"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#86/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#86"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(30,15)-(30,16)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#maxLength": [
{
"@id": "amf://id#87",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "255"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#integer"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_32"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#87/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#87"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(31,15)-(31,18)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#required": [
{
"@id": "amf://id#88",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "true"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#boolean"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_33"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#88/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#88"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(32,14)-(32,18)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "object_27"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#82/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#required"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(32,4)-(33,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#minLength"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(30,4)-(31,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#example"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(28,4)-(29,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#82"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(27,0)-(33,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(27,4)-(28,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#type"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(29,4)-(30,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#maxLength"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(31,4)-(32,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#X-HSBC-Chnl-Group-Member": [
{
"@id": "amf://id#89",
"@type": [
"http://a.ml/vocabularies/data#Object",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#description": [
{
"@id": "amf://id#90",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "HSBC Group member"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_35"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#90/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#90"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(34,17)-(34,34)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#type": [
{
"@id": "amf://id#91",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "string"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_36"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#91/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#91"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(35,10)-(35,16)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#example": [
{
"@id": "amf://id#92",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "HBAP"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_37"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#92/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#92"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(36,13)-(36,19)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#required": [
{
"@id": "amf://id#93",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "false"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#boolean"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_38"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#93/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#93"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(37,14)-(37,19)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "object_34"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#89/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#required"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(37,4)-(38,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#type"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(35,4)-(36,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#89"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(34,0)-(38,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(34,4)-(35,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#example"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(36,4)-(37,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#User-Agent": [
{
"@id": "amf://id#94",
"@type": [
"http://a.ml/vocabularies/data#Object",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#description": [
{
"@id": "amf://id#95",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "User Agent form user's machine/browser"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_40"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#95/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#95"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(39,17)-(39,55)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#example": [
{
"@id": "amf://id#96",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_41"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#96/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#96"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(40,13)-(40,126)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#required": [
{
"@id": "amf://id#97",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "false"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#boolean"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_42"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#97/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#97"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(41,14)-(41,19)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "object_39"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#94/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#required"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(41,4)-(42,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(39,4)-(40,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#94"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(39,0)-(42,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#example"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(40,4)-(41,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#X-HSBC-GBGF": [
{
"@id": "amf://id#98",
"@type": [
"http://a.ml/vocabularies/data#Object",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#description": [
{
"@id": "amf://id#99",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "The Global Business or Global Function (GBGF) as defined by the Business."
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_44"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#99/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#99"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(43,17)-(43,90)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#type": [
{
"@id": "amf://id#100",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "string"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_45"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#100/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#100"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(44,10)-(44,16)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#example": [
{
"@id": "amf://id#101",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "RBWM"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_46"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#101/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#101"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(45,13)-(45,19)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#pattern": [
{
"@id": "amf://id#102",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "^[A-Z]{1,4}$"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_47"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#102/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#102"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(46,13)-(46,25)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#required": [
{
"@id": "amf://id#103",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "false"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#boolean"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_48"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#103/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#103"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(47,14)-(47,19)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "object_43"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#98/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#required"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(47,4)-(48,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#example"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(45,4)-(46,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(43,4)-(44,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#98"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(43,0)-(48,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#type"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(44,4)-(45,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#pattern"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(46,4)-(47,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "object_2"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#57/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#X-HSBC-GBGF"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(42,2)-(48,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#X-HSBC-Chnl-Group-Member"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(33,2)-(38,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#X-HSBC-Request-Correlation-Id"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(20,2)-(26,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#X-HSBC-SoR-CountryCode"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(8,2)-(14,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#57"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(2,0)-(48,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#X-HSBC-Source-System-Id"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(2,2)-(8,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#X-HSBC-Session-Correlation-Id"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(14,2)-(20,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#X-HSBC-Routing-Indicator-Id"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(26,2)-(33,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#User-Agent"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(38,2)-(42,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "object_1"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#56/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#headers"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(1,0)-(48,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#56"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(1,0)-(48,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#55/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#55"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(7,2)-(8,0)]"
}
]
}
]
}
]
},
{
"@id": "amf://id#104",
"@type": [
"http://a.ml/vocabularies/apiContract#Trait",
"http://a.ml/vocabularies/document#AbstractDeclaration",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "security-header"
}
],
"http://a.ml/vocabularies/document#dataNode": [
{
"@id": "amf://id#105",
"@type": [
"http://a.ml/vocabularies/data#Object",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#headers": [
{
"@id": "amf://id#106",
"@type": [
"http://a.ml/vocabularies/data#Object",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#X-HSBC-E2E-Trust-Token": [
{
"@id": "amf://id#107",
"@type": [
"http://a.ml/vocabularies/data#Object",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#description": [
{
"@id": "amf://id#108",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "Contains Identity information about the authentication caller (or subject)"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_4"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#108/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#108"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(3,17)-(3,91)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#required": [
{
"@id": "amf://id#109",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "false"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#boolean"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_5"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#109/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#109"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(4,14)-(4,19)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "object_3"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#107/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#required"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(4,4)-(5,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#107"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(3,0)-(5,0)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(3,4)-(4,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#X-HSBC-Session-Id": [
{
"@id": "amf://id#110",
"@type": [
"http://a.ml/vocabularies/data#Object",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#description": [
{
"@id": "amf://id#111",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "Contains the identifier which represents a subject's authenticated session with an Identity Provider"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_7"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#111/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#111"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(6,17)-(6,117)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/data#required": [
{
"@id": "amf://id#112",
"@type": [
"http://a.ml/vocabularies/data#Scalar",
"http://a.ml/vocabularies/data#Node",
"http://a.ml/vocabularies/document#DomainElement"
],
"http://a.ml/vocabularies/data#value": [
{
"@value": "false"
}
],
"http://www.w3.org/ns/shacl#datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#boolean"
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "scalar_8"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#112/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#112"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(7,14)-(7,19)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "object_6"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#110/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#required"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(7,4)-(7,19)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#110"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(6,0)-(7,19)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#description"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(6,4)-(7,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "object_2"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#106/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#X-HSBC-Session-Id"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(5,2)-(7,19)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#106"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(2,0)-(7,19)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#X-HSBC-E2E-Trust-Token"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(2,2)-(5,0)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/core#name": [
{
"@value": "object_1"
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#105/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "http://a.ml/vocabularies/data#headers"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(1,0)-(7,19)]"
}
]
},
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#105"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(1,0)-(7,19)]"
}
]
}
]
}
]
}
],
"http://a.ml/vocabularies/document-source-maps#sources": [
{
"@id": "amf://id#104/source-map",
"@type": [
"http://a.ml/vocabularies/document-source-maps#SourceMap"
],
"http://a.ml/vocabularies/document-source-maps#lexical": [
{
"http://a.ml/vocabularies/document-source-maps#element": [
{
"@value": "amf://id#104"
}
],
"http://a.ml/vocabularies/document-source-maps#value": [
{
"@value": "[(8,2)-(10,0)]"
}
]
}
]
}
]
}
]
}
]
